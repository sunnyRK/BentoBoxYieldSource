{
  "address": "0x4bfAeA431419faA784512a5d74B51cFE5675bF27",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract ILendingPair[]",
          "name": "pairs",
          "type": "address[]"
        }
      ],
      "name": "getPairs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ILendingPair",
              "name": "pair",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            },
            {
              "internalType": "contract IBentoBox",
              "name": "bentoBox",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "masterContract",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "masterContractApproved",
              "type": "bool"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenAsset",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenCollateral",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "latestExchangeRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastBlockAccrued",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalAssetFraction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBorrowFraction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestPerBlock",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feesPendingAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userCollateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userAssetFraction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userBorrowFraction",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userBorrowAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userAssetBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userCollateralBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userAssetAllowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "userCollateralAllowance",
              "type": "uint256"
            }
          ],
          "internalType": "struct BentoHelper.PairInfo[]",
          "name": "info",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x68aa96006e9a2f27666754368659864b501be6480ef4d790285bade9f69fdefa",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "1124007",
    "logsBloom": "0x
    "blockHash": "0xff445d4199f844da54480fc71cecff3cb1a5fcbaf9b0cf3fb0355fefad5aae1b",
    "transactionHash": "0x68aa96006e9a2f27666754368659864b501be6480ef4d790285bade9f69fdefa",
    "logs": [],
    "blockNumber": 8,
    "cumulativeGasUsed": "1124007",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "49dd10c21142f3de1d4cf3403c661c8c",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract ILendingPair[]\",\"name\":\"pairs\",\"type\":\"address[]\"}],\"name\":\"getPairs\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ILendingPair\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"contract IBentoBox\",\"name\":\"bentoBox\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"masterContractApproved\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenAsset\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"latestExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBlockAccrued\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAssetFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBorrowFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feesPendingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAssetFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBorrowFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBorrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAssetBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userCollateralBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userAssetAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userCollateralAllowance\",\"type\":\"uint256\"}],\"internalType\":\"struct BentoHelper.PairInfo[]\",\"name\":\"info\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BentoHelper.sol\":\"BentoHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@bartjman/boring-solidity/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    // EIP 2612\\r\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n}\",\"keccak256\":\"0x8004f86e4536cca55b8eeb2621fe18e1ee57d779396ddef50bce5bf70fb59867\",\"license\":\"MIT\"},\"contracts/BentoHelper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\nimport \\\"./interfaces/ILendingPair.sol\\\";\\nimport \\\"./interfaces/IOracle.sol\\\";\\n\\ncontract BentoHelper {\\n    struct PairInfo {\\n        ILendingPair pair;\\n        IOracle oracle;\\n        IBentoBox bentoBox;\\n        address masterContract;\\n        bool masterContractApproved;\\n        IERC20 tokenAsset;\\n        IERC20 tokenCollateral;\\n\\n        uint256 latestExchangeRate;\\n        uint256 lastBlockAccrued;\\n        uint256 interestRate;\\n        uint256 totalCollateralAmount;\\n        uint256 totalAssetAmount;\\n        uint256 totalBorrowAmount;\\n\\n        uint256 totalAssetFraction;\\n        uint256 totalBorrowFraction;\\n\\n        uint256 interestPerBlock;\\n\\n        uint256 feesPendingAmount;\\n\\n        uint256 userCollateralAmount;\\n        uint256 userAssetFraction;\\n        uint256 userAssetAmount;\\n        uint256 userBorrowFraction;\\n        uint256 userBorrowAmount;\\n\\n        uint256 userAssetBalance;\\n        uint256 userCollateralBalance;\\n        uint256 userAssetAllowance;\\n        uint256 userCollateralAllowance;\\n    }\\n\\n    function getPairs(address user, ILendingPair[] calldata pairs) public view returns (PairInfo[] memory info) {\\n        info = new PairInfo[](pairs.length);\\n        for(uint256 i = 0; i < pairs.length; i++) {\\n            ILendingPair pair = pairs[i];\\n            info[i].pair = pair;\\n            info[i].oracle = pair.oracle();\\n            IBentoBox bentoBox = pair.bentoBox();\\n            info[i].bentoBox = bentoBox;\\n            info[i].masterContract = address(pair.masterContract());\\n            info[i].masterContractApproved = bentoBox.masterContractApproved(info[i].masterContract, user);\\n            IERC20 asset = pair.asset();\\n            info[i].tokenAsset = asset;\\n            IERC20 collateral = pair.collateral();\\n            info[i].tokenCollateral = collateral;\\n\\n            (, info[i].latestExchangeRate) = pair.peekExchangeRate();\\n            (info[i].interestPerBlock, info[i].lastBlockAccrued, info[i].feesPendingAmount) = pair.accrueInfo();\\n            info[i].totalCollateralAmount = pair.totalCollateralAmount();\\n            (info[i].totalAssetAmount, info[i].totalAssetFraction ) = pair.totalAsset();\\n            (info[i].totalBorrowAmount, info[i].totalBorrowFraction) = pair.totalBorrow();\\n\\n            info[i].userCollateralAmount = pair.userCollateralAmount(user);\\n            info[i].userAssetFraction = pair.balanceOf(user);\\n            info[i].userAssetAmount = info[i].totalAssetFraction == 0 ? 0 :\\n                 info[i].userAssetFraction * info[i].totalAssetAmount / info[i].totalAssetFraction;\\n            info[i].userBorrowFraction = pair.userBorrowFraction(user);\\n            info[i].userBorrowAmount = info[i].totalBorrowFraction == 0 ? 0 :\\n                info[i].userBorrowFraction * info[i].totalBorrowAmount / info[i].totalBorrowFraction;\\n\\n            info[i].userAssetBalance = info[i].tokenAsset.balanceOf(user);\\n            info[i].userCollateralBalance = info[i].tokenCollateral.balanceOf(user);\\n            info[i].userAssetAllowance = info[i].tokenAsset.allowance(user, address(bentoBox));\\n            info[i].userCollateralAllowance = info[i].tokenCollateral.allowance(user, address(bentoBox));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x287847d6b98c437ccddd456e0ddd30339008e15158032f6428299a5a4caf2eb6\",\"license\":\"MIT\"},\"contracts/interfaces/IBentoBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\nimport \\\"@bartjman/boring-solidity/contracts/interfaces/IERC20.sol\\\";\\r\\n\\r\\ninterface IBentoBox {\\r\\n    event LogDeploy(address indexed masterContract, bytes data, address indexed cloneAddress);\\r\\n    event LogDeposit(address indexed token, address indexed from, address indexed to, uint256 amount);\\r\\n    event LogSetMasterContractApproval(address indexed masterContract, address indexed user, bool indexed approved);\\r\\n    event LogTransfer(address indexed token, address indexed from, address indexed to, uint256 amount);\\r\\n    event LogWithdraw(address indexed token, address indexed from, address indexed to, uint256 amount);\\r\\n    // solhint-disable-next-line func-name-mixedcase\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    // solhint-disable-next-line func-name-mixedcase\\r\\n    function WETH() external view returns (IERC20);\\r\\n    function balanceOf(IERC20, address) external view returns (uint256);\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory successes, bytes[] memory results);\\r\\n    function deploy(address masterContract, bytes calldata data) external;\\r\\n    function deposit(IERC20 token, address from, uint256 amount) external payable;\\r\\n    function depositTo(IERC20 token, address from, address to, uint256 amount) external payable;\\r\\n    function masterContractApproved(address, address) external view returns (bool);\\r\\n    function masterContractOf(address) external view returns (address);\\r\\n    function nonces(address) external view returns (uint256);\\r\\n    function permit(IERC20 token, address from, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    function setMasterContractApproval(address user, address masterContract, bool approved, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    function skim(IERC20 token) external returns (uint256 amount);\\r\\n    function skimETH() external returns (uint256 amount);\\r\\n    function skimETHTo(address to) external returns (uint256 amount);\\r\\n    function skimTo(IERC20 token, address to) external returns (uint256 amount);\\r\\n    function totalSupply(IERC20) external view returns (uint256);\\r\\n    function transfer(IERC20 token, address to, uint256 amount) external;\\r\\n    function transferFrom(IERC20 token, address from, address to, uint256 amount) external;\\r\\n    function transferMultiple(IERC20 token, address[] calldata tos, uint256[] calldata amounts) external;\\r\\n    function transferMultipleFrom(IERC20 token, address from, address[] calldata tos, uint256[] calldata amounts) external;\\r\\n    function withdraw(IERC20 token, address to, uint256 amount) external;\\r\\n    function withdrawFrom(IERC20 token, address from, address to, uint256 amount) external;\\r\\n}\",\"keccak256\":\"0x92486562e408b45a0dee2d1dc2759e9cbb70ad02e854b57c12ef0cd4caee7ba6\",\"license\":\"MIT\"},\"contracts/interfaces/ILendingPair.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// solhint-disable func-name-mixedcase\\r\\n\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\nimport \\\"./IOracle.sol\\\";\\r\\nimport \\\"./ISwapper.sol\\\";\\r\\nimport \\\"./IBentoBox.sol\\\";\\r\\n\\r\\ninterface ILendingPair {\\r\\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\\r\\n    event LogAccrue(uint256 accruedAmount, uint256 feeAmount, uint256 rate, uint256 utilization);\\r\\n    event LogAddAsset(address indexed user, uint256 amount, uint256 fraction);\\r\\n    event LogAddBorrow(address indexed user, uint256 amount, uint256 fraction);\\r\\n    event LogAddCollateral(address indexed user, uint256 amount);\\r\\n    event LogDev(address indexed newDev);\\r\\n    event LogExchangeRate(uint256 rate);\\r\\n    event LogFeeTo(address indexed newFeeTo);\\r\\n    event LogRemoveAsset(address indexed user, uint256 amount, uint256 fraction);\\r\\n    event LogRemoveBorrow(address indexed user, uint256 amount, uint256 fraction);\\r\\n    event LogRemoveCollateral(address indexed user, uint256 amount);\\r\\n    event LogWithdrawFees();\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function accrue() external;\\r\\n    function accrueInfo() external view returns (uint64 interestPerBlock, uint64 lastBlockAccrued, uint128 feesPendingAmount);\\r\\n    function addAsset(uint256 amount, bool useBento) external payable;\\r\\n    function addAssetTo(uint256 amount, address to, bool useBento) external payable;\\r\\n    function addCollateral(uint256 amount, bool useBento) external payable;\\r\\n    function addCollateralTo(uint256 amount, address to, bool useBento) external payable;\\r\\n    function allowance(address, address) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool success);\\r\\n    function asset() external view returns (IERC20);\\r\\n    function balanceOf(address) external view returns (uint256);\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns (bool[] memory, bytes[] memory);\\r\\n    function bentoBox() external view returns (IBentoBox);\\r\\n    function borrow(uint256 amount, address to, bool useBento) external;\\r\\n    function claimOwnership() external;\\r\\n    function collateral() external view returns (IERC20);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function dev() external view returns (address);\\r\\n    function exchangeRate() external view returns (uint256);\\r\\n    function feeTo() external view returns (address);\\r\\n    function getInitData(\\r\\n        IERC20 collateral_, IERC20 asset_, IOracle oracle_, bytes calldata oracleData_) external pure returns (bytes memory data);\\r\\n    function init(bytes calldata data) external;\\r\\n    function isSolvent(address user, bool open) external view returns (bool);\\r\\n    function liquidate(address[] calldata users, uint256[] calldata borrowFractions, address to, ISwapper swapper, bool open) external;\\r\\n    function masterContract() external view returns (ILendingPair);\\r\\n    function name() external view returns (string memory);\\r\\n    function nonces(address) external view returns (uint256);\\r\\n    function oracle() external view returns (IOracle);\\r\\n    function oracleData() external view returns (bytes memory);\\r\\n    function owner() external view returns (address);\\r\\n    function peekExchangeRate() external view returns (bool, uint256);\\r\\n    function pendingOwner() external view returns (address);\\r\\n    function permit(address owner_, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    function permitToken(IERC20 token, address from, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    function removeAsset(uint256 fraction, address to, bool useBento) external;\\r\\n    function removeCollateral(uint256 amount, address to, bool useBento) external;\\r\\n    function renounceOwnership() external;\\r\\n    function repay(uint256 fraction, bool useBento) external;\\r\\n    function repayFor(uint256 fraction, address beneficiary, bool useBento) external;\\r\\n    function setApproval(address user, bool approved, uint8 v, bytes32 r, bytes32 s) external;\\r\\n    function setDev(address newDev) external;\\r\\n    function setFeeTo(address newFeeTo) external;\\r\\n    function setSwapper(ISwapper swapper, bool enable) external;\\r\\n    function short(ISwapper swapper, uint256 assetAmount, uint256 minCollateralAmount) external;\\r\\n    function swappers(ISwapper) external view returns (bool);\\r\\n    function swipe(IERC20 token) external;\\r\\n    function symbol() external view returns (string memory);\\r\\n    function totalAsset() external view returns (uint128 amount, uint128 fraction);\\r\\n    function totalBorrow() external view returns (uint128 amount, uint128 fraction);\\r\\n    function totalCollateralAmount() external view returns (uint256);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function transfer(address to, uint256 amount) external returns (bool success);\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool success);\\r\\n    function transferOwnership(address newOwner) external;\\r\\n    function transferOwnershipDirect(address newOwner) external;\\r\\n    function unwind(ISwapper swapper, uint256 borrowFraction, uint256 maxAmountCollateral) external;\\r\\n    function updateExchangeRate() external returns (uint256);\\r\\n    function userBorrowFraction(address) external view returns (uint256);\\r\\n    function userCollateralAmount(address) external view returns (uint256);\\r\\n    function withdrawFees() external;\\r\\n}\",\"keccak256\":\"0xead424e640f3943042580537c171054e4e8d2a3c6dd70f7386f1871bd10c9255\",\"license\":\"MIT\"},\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ninterface IOracle {\\r\\n    // Get the latest exchange rate, if no valid (recent) rate is available, return false\\r\\n    function get(bytes calldata data) external returns (bool, uint256);\\r\\n    function peek(bytes calldata data) external view returns (bool, uint256);\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\",\"keccak256\":\"0x60bb8536600c28737b55ed10f538518c788d15e8066c9e45e15c5278d1ad902a\",\"license\":\"MIT\"},\"contracts/interfaces/ISwapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"./IBentoBox.sol\\\";\\r\\n\\r\\ninterface ISwapper {\\r\\n    // Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper\\r\\n    // Swaps it for at least 'amountToMin' of token 'to'\\r\\n    // Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer\\r\\n    // Returns the amount of tokens 'to' transferred to BentoBox\\r\\n    // (The BentoBox skim function will be used by the caller to get the swapped funds)\\r\\n    function swap(IERC20 from, IERC20 to, uint256 amountFrom, uint256 amountToMin) external returns (uint256 amountTo);\\r\\n\\r\\n    // Calculates the amount of token 'from' needed to complete the swap (amountFrom), this should be less than or equal to amountFromMax\\r\\n    // Withdraws 'amountFrom' of token 'from' from the BentoBox account for this swapper\\r\\n    // Swaps it for exactly 'exactAmountTo' of token 'to'\\r\\n    // Transfers the swapped tokens of 'to' into the BentoBox using a plain ERC20 transfer\\r\\n    // Transfers allocated, but unused 'from' tokens within the BentoBox to 'refundTo' (amountFromMax - amountFrom)\\r\\n    // Returns the amount of 'from' tokens withdrawn from BentoBox (amountFrom)\\r\\n    // (The BentoBox skim function will be used by the caller to get the swapped funds)\\r\\n    function swapExact(\\r\\n        IERC20 from, IERC20 to, uint256 amountFromMax,\\r\\n        uint256 exactAmountTo, address refundTo\\r\\n    ) external returns (uint256 amountFrom);\\r\\n}\",\"keccak256\":\"0xf60dcb00aae1e4f4d042a2562adf2dee0672de6b4f7ea8db6b06201645a49828\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611355806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806318b0ca1614610030575b600080fd5b61004361003e366004610f58565b610059565b6040516100509190611148565b60405180910390f35b60608167ffffffffffffffff8111801561007257600080fd5b506040519080825280602002602001820160405280156100ac57816020015b610099610e5d565b8152602001906001900390816100915790505b50905060005b82811015610e555760008484838181106100c857fe5b90506020020160208101906100dd919061104e565b9050808383815181106100ec57fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190611032565b83838151811061018d57fe5b6020026020010151602001906001600160a01b031690816001600160a01b0316815250506000816001600160a01b0316636b2ace876040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ec57600080fd5b505afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102249190611032565b90508084848151811061023357fe5b6020026020010151604001906001600160a01b031690816001600160a01b031681525050816001600160a01b031663cd446e226040518163ffffffff1660e01b815260040160206040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190611032565b8484815181106102d457fe5b6020026020010151606001906001600160a01b031690816001600160a01b031681525050806001600160a01b03166391e0eab585858151811061031357fe5b602002602001015160600151896040518363ffffffff1660e01b815260040161033d92919061112e565b60206040518083038186803b15801561035557600080fd5b505afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610fda565b84848151811061039957fe5b602002602001015160800190151590811515815250506000826001600160a01b03166338d52e0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190611032565b90508085858151811061043157fe5b602002602001015160a001906001600160a01b031690816001600160a01b0316815250506000836001600160a01b031663d8dfeb456040518163ffffffff1660e01b815260040160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190611032565b9050808686815181106104d757fe5b602002602001015160c001906001600160a01b031690816001600160a01b031681525050836001600160a01b031663d98cb9016040518163ffffffff1660e01b8152600401604080518083038186803b15801561053357600080fd5b505afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190611001565b905086868151811061057957fe5b602002602001015160e0018181525050836001600160a01b031663b27c0e746040518163ffffffff1660e01b815260040160606040518083038186803b1580156105c257600080fd5b505afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa91906110bb565b8267ffffffffffffffff1692508167ffffffffffffffff169150806001600160801b0316905088888151811061062c57fe5b60200260200101516101e00189898151811061064457fe5b6020026020010151610100018a8a8151811061065c57fe5b602002602001015161020001838152508381525083815250505050836001600160a01b03166363f31d2c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906110a3565b8686815181106106f457fe5b6020026020010151610140018181525050836001600160a01b031663f9557ccb6040518163ffffffff1660e01b8152600401604080518083038186803b15801561073d57600080fd5b505afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610775919061106a565b816001600160801b03169150806001600160801b0316905087878151811061079957fe5b6020026020010151610160018888815181106107b157fe5b60200260200101516101a00182815250828152505050836001600160a01b0316638285ef406040518163ffffffff1660e01b8152600401604080518083038186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610837919061106a565b816001600160801b03169150806001600160801b0316905087878151811061085b57fe5b60200260200101516101800188888151811061087357fe5b60209081029190910101516101c00191909152526040516358e21e5f60e11b81526001600160a01b0385169063b1c43cbe906108b3908c9060040161111a565b60206040518083038186803b1580156108cb57600080fd5b505afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090391906110a3565b86868151811061090f57fe5b602090810291909101015161022001526040516370a0823160e01b81526001600160a01b038516906370a082319061094b908c9060040161111a565b60206040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b91906110a3565b8686815181106109a757fe5b60200260200101516102400181815250508585815181106109c457fe5b60200260200101516101a00151600014610a31578585815181106109e457fe5b60200260200101516101a001518686815181106109fd57fe5b60200260200101516101600151878781518110610a1657fe5b602002602001015161024001510281610a2b57fe5b04610a34565b60005b868681518110610a4057fe5b6020908102919091010151610260015260405163e0d8e70360e01b81526001600160a01b0385169063e0d8e70390610a7c908c9060040161111a565b60206040518083038186803b158015610a9457600080fd5b505afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acc91906110a3565b868681518110610ad857fe5b6020026020010151610280018181525050858581518110610af557fe5b60200260200101516101c00151600014610b6257858581518110610b1557fe5b60200260200101516101c00151868681518110610b2e57fe5b60200260200101516101800151878781518110610b4757fe5b602002602001015161028001510281610b5c57fe5b04610b65565b60005b868681518110610b7157fe5b60200260200101516102a0018181525050858581518110610b8e57fe5b602002602001015160a001516001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610bc5919061111a565b60206040518083038186803b158015610bdd57600080fd5b505afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1591906110a3565b868681518110610c2157fe5b60200260200101516102c0018181525050858581518110610c3e57fe5b602002602001015160c001516001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610c75919061111a565b60206040518083038186803b158015610c8d57600080fd5b505afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc591906110a3565b868681518110610cd157fe5b60200260200101516102e0018181525050858581518110610cee57fe5b602002602001015160a001516001600160a01b031663dd62ed3e8a856040518363ffffffff1660e01b8152600401610d2792919061112e565b60206040518083038186803b158015610d3f57600080fd5b505afa158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7791906110a3565b868681518110610d8357fe5b6020026020010151610300018181525050858581518110610da057fe5b602002602001015160c001516001600160a01b031663dd62ed3e8a856040518363ffffffff1660e01b8152600401610dd992919061112e565b60206040518083038186803b158015610df157600080fd5b505afa158015610e05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2991906110a3565b868681518110610e3557fe5b602090810291909101015161032001525050600190920191506100b29050565b509392505050565b60405180610340016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080600060408486031215610f6c578283fd5b8335610f77816112dc565b9250602084013567ffffffffffffffff80821115610f93578384fd5b818601915086601f830112610fa6578384fd5b813581811115610fb4578485fd5b8760208083028501011115610fc7578485fd5b6020830194508093505050509250925092565b600060208284031215610feb578081fd5b81518015158114610ffa578182fd5b9392505050565b60008060408385031215611013578182fd5b82518015158114611022578283fd5b6020939093015192949293505050565b600060208284031215611043578081fd5b8151610ffa816112dc565b60006020828403121561105f578081fd5b8135610ffa816112dc565b6000806040838503121561107c578182fd5b8251611087816112f4565b6020840151909250611098816112f4565b809150509250929050565b6000602082840312156110b4578081fd5b5051919050565b6000806000606084860312156110cf578283fd5b83516110da81611309565b60208501519093506110eb81611309565b60408501519092506110fc816112f4565b809150509250925092565b6001600160a01b03169052565b15159052565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b602080825282518282018190526000919060409081850190868401855b828110156112cf57815161117a858251611107565b8681015161118a88870182611107565b508581015161119b87870182611107565b506060808201516111ae82880182611107565b50506080808201516111c282880182611114565b505060a0808201516111d682880182611107565b505060c0808201516111ea82880182611107565b505060e08181015190860152610100808201519086015261012080820151908601526101408082015190860152610160808201519086015261018080820151908601526101a080820151908601526101c080820151908601526101e08082015190860152610200808201519086015261022080820151908601526102408082015190860152610260808201519086015261028080820151908601526102a080820151908601526102c080820151908601526102e08082015190860152610300808201519086015261032090810151908501526103409093019290850190600101611165565b5091979650505050505050565b6001600160a01b03811681146112f157600080fd5b50565b6001600160801b03811681146112f157600080fd5b67ffffffffffffffff811681146112f157600080fdfea2646970667358221220f4ffee9a5676973113495770e81230641c937b9131073b78759357144737cce464736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806318b0ca1614610030575b600080fd5b61004361003e366004610f58565b610059565b6040516100509190611148565b60405180910390f35b60608167ffffffffffffffff8111801561007257600080fd5b506040519080825280602002602001820160405280156100ac57816020015b610099610e5d565b8152602001906001900390816100915790505b50905060005b82811015610e555760008484838181106100c857fe5b90506020020160208101906100dd919061104e565b9050808383815181106100ec57fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050806001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101819190611032565b83838151811061018d57fe5b6020026020010151602001906001600160a01b031690816001600160a01b0316815250506000816001600160a01b0316636b2ace876040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ec57600080fd5b505afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102249190611032565b90508084848151811061023357fe5b6020026020010151604001906001600160a01b031690816001600160a01b031681525050816001600160a01b031663cd446e226040518163ffffffff1660e01b815260040160206040518083038186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190611032565b8484815181106102d457fe5b6020026020010151606001906001600160a01b031690816001600160a01b031681525050806001600160a01b03166391e0eab585858151811061031357fe5b602002602001015160600151896040518363ffffffff1660e01b815260040161033d92919061112e565b60206040518083038186803b15801561035557600080fd5b505afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190610fda565b84848151811061039957fe5b602002602001015160800190151590811515815250506000826001600160a01b03166338d52e0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ea57600080fd5b505afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190611032565b90508085858151811061043157fe5b602002602001015160a001906001600160a01b031690816001600160a01b0316815250506000836001600160a01b031663d8dfeb456040518163ffffffff1660e01b815260040160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c89190611032565b9050808686815181106104d757fe5b602002602001015160c001906001600160a01b031690816001600160a01b031681525050836001600160a01b031663d98cb9016040518163ffffffff1660e01b8152600401604080518083038186803b15801561053357600080fd5b505afa158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190611001565b905086868151811061057957fe5b602002602001015160e0018181525050836001600160a01b031663b27c0e746040518163ffffffff1660e01b815260040160606040518083038186803b1580156105c257600080fd5b505afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa91906110bb565b8267ffffffffffffffff1692508167ffffffffffffffff169150806001600160801b0316905088888151811061062c57fe5b60200260200101516101e00189898151811061064457fe5b6020026020010151610100018a8a8151811061065c57fe5b602002602001015161020001838152508381525083815250505050836001600160a01b03166363f31d2c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e891906110a3565b8686815181106106f457fe5b6020026020010151610140018181525050836001600160a01b031663f9557ccb6040518163ffffffff1660e01b8152600401604080518083038186803b15801561073d57600080fd5b505afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610775919061106a565b816001600160801b03169150806001600160801b0316905087878151811061079957fe5b6020026020010151610160018888815181106107b157fe5b60200260200101516101a00182815250828152505050836001600160a01b0316638285ef406040518163ffffffff1660e01b8152600401604080518083038186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610837919061106a565b816001600160801b03169150806001600160801b0316905087878151811061085b57fe5b60200260200101516101800188888151811061087357fe5b60209081029190910101516101c00191909152526040516358e21e5f60e11b81526001600160a01b0385169063b1c43cbe906108b3908c9060040161111a565b60206040518083038186803b1580156108cb57600080fd5b505afa1580156108df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090391906110a3565b86868151811061090f57fe5b602090810291909101015161022001526040516370a0823160e01b81526001600160a01b038516906370a082319061094b908c9060040161111a565b60206040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b91906110a3565b8686815181106109a757fe5b60200260200101516102400181815250508585815181106109c457fe5b60200260200101516101a00151600014610a31578585815181106109e457fe5b60200260200101516101a001518686815181106109fd57fe5b60200260200101516101600151878781518110610a1657fe5b602002602001015161024001510281610a2b57fe5b04610a34565b60005b868681518110610a4057fe5b6020908102919091010151610260015260405163e0d8e70360e01b81526001600160a01b0385169063e0d8e70390610a7c908c9060040161111a565b60206040518083038186803b158015610a9457600080fd5b505afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acc91906110a3565b868681518110610ad857fe5b6020026020010151610280018181525050858581518110610af557fe5b60200260200101516101c00151600014610b6257858581518110610b1557fe5b60200260200101516101c00151868681518110610b2e57fe5b60200260200101516101800151878781518110610b4757fe5b602002602001015161028001510281610b5c57fe5b04610b65565b60005b868681518110610b7157fe5b60200260200101516102a0018181525050858581518110610b8e57fe5b602002602001015160a001516001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610bc5919061111a565b60206040518083038186803b158015610bdd57600080fd5b505afa158015610bf1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1591906110a3565b868681518110610c2157fe5b60200260200101516102c0018181525050858581518110610c3e57fe5b602002602001015160c001516001600160a01b03166370a082318a6040518263ffffffff1660e01b8152600401610c75919061111a565b60206040518083038186803b158015610c8d57600080fd5b505afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc591906110a3565b868681518110610cd157fe5b60200260200101516102e0018181525050858581518110610cee57fe5b602002602001015160a001516001600160a01b031663dd62ed3e8a856040518363ffffffff1660e01b8152600401610d2792919061112e565b60206040518083038186803b158015610d3f57600080fd5b505afa158015610d53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7791906110a3565b868681518110610d8357fe5b6020026020010151610300018181525050858581518110610da057fe5b602002602001015160c001516001600160a01b031663dd62ed3e8a856040518363ffffffff1660e01b8152600401610dd992919061112e565b60206040518083038186803b158015610df157600080fd5b505afa158015610e05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2991906110a3565b868681518110610e3557fe5b602090810291909101015161032001525050600190920191506100b29050565b509392505050565b60405180610340016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600080600060408486031215610f6c578283fd5b8335610f77816112dc565b9250602084013567ffffffffffffffff80821115610f93578384fd5b818601915086601f830112610fa6578384fd5b813581811115610fb4578485fd5b8760208083028501011115610fc7578485fd5b6020830194508093505050509250925092565b600060208284031215610feb578081fd5b81518015158114610ffa578182fd5b9392505050565b60008060408385031215611013578182fd5b82518015158114611022578283fd5b6020939093015192949293505050565b600060208284031215611043578081fd5b8151610ffa816112dc565b60006020828403121561105f578081fd5b8135610ffa816112dc565b6000806040838503121561107c578182fd5b8251611087816112f4565b6020840151909250611098816112f4565b809150509250929050565b6000602082840312156110b4578081fd5b5051919050565b6000806000606084860312156110cf578283fd5b83516110da81611309565b60208501519093506110eb81611309565b60408501519092506110fc816112f4565b809150509250925092565b6001600160a01b03169052565b15159052565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b602080825282518282018190526000919060409081850190868401855b828110156112cf57815161117a858251611107565b8681015161118a88870182611107565b508581015161119b87870182611107565b506060808201516111ae82880182611107565b50506080808201516111c282880182611114565b505060a0808201516111d682880182611107565b505060c0808201516111ea82880182611107565b505060e08181015190860152610100808201519086015261012080820151908601526101408082015190860152610160808201519086015261018080820151908601526101a080820151908601526101c080820151908601526101e08082015190860152610200808201519086015261022080820151908601526102408082015190860152610260808201519086015261028080820151908601526102a080820151908601526102c080820151908601526102e08082015190860152610300808201519086015261032090810151908501526103409093019290850190600101611165565b5091979650505050505050565b6001600160a01b03811681146112f157600080fd5b50565b6001600160801b03811681146112f157600080fd5b67ffffffffffffffff811681146112f157600080fdfea2646970667358221220f4ffee9a5676973113495770e81230641c937b9131073b78759357144737cce464736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}