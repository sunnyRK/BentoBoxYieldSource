{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "wethToken_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "cloneAddress",
          "type": "address"
        }
      ],
      "name": "LogDeploy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "LogDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "LogFlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "LogSetMasterContractApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "LogTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "LogWhiteListMasterContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "LogWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "calls",
          "type": "bytes[]"
        },
        {
          "internalType": "bool",
          "name": "revertOnFail",
          "type": "bool"
        }
      ],
      "name": "batch",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "successes",
          "type": "bool[]"
        },
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "masterContractApproved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "masterContractOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "setMasterContractApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "toAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "toShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totals",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "share",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tos",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        }
      ],
      "name": "transferMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "direct",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "renounce",
          "type": "bool"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "masterContract",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "whitelistMasterContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedMasterContracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2bd3a9bb01c3875dac3e6256345b4894ecc0b0d35cfe59c481c83420eef526d5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "2854269",
    "logsBloom": "0x
    "blockHash": "0x254d01823073024c05b20ca53a385b53e1a8360c0b181eac704a2b4aac5a0c66",
    "transactionHash": "0x2bd3a9bb01c3875dac3e6256345b4894ecc0b0d35cfe59c481c83420eef526d5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 7,
        "transactionHash": "0x2bd3a9bb01c3875dac3e6256345b4894ecc0b0d35cfe59c481c83420eef526d5",
        "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x254d01823073024c05b20ca53a385b53e1a8360c0b181eac704a2b4aac5a0c66"
      }
    ],
    "blockNumber": 7,
    "cumulativeGasUsed": "2854269",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x6ea49423dC2E2133622dcD4896F25718C01C8A4d"
  ],
  "solcInputHash": "49dd10c21142f3de1d4cf3403c661c8c",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"wethToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"LogDeploy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LogFlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"LogSetMasterContractApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"LogWhiteListMasterContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"LogWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"revertOnFail\",\"type\":\"bool\"}],\"name\":\"batch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"successes\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"masterContractApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"masterContractOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMasterContractApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totals\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"share\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tos\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"transferMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"whitelistMasterContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedMasterContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BentoBoxPlus.sol\":\"BentoBoxPlus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@bartjman/boring-solidity/contracts/BoringBatchable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\\r\\n\\r\\n// P1 - P3: OK\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n// solhint-disable avoid-low-level-calls\\r\\n\\r\\nimport \\\"./libraries/BoringERC20.sol\\\";\\r\\n\\r\\n// T1 - T4: OK\\r\\ncontract BaseBoringBatchable {\\r\\n    // F3 - F9: OK\\r\\n    // F1: External is ok here because this is the batch function, adding it to a batch makes no sense\\r\\n    // F2: Calls in the batch may be payable, delegatecall operates in the same context, so each call in the batch has access to msg.value\\r\\n    // C1 - C21: OK\\r\\n    // C3: The length of the loop is fully under user control, so can't be exploited\\r\\n    // C7: Delegatecall is only used on the same contract, so it's safe\\r\\n    function batch(bytes[] calldata calls, bool revertOnFail) external payable returns(bool[] memory successes, bytes[] memory results) {\\r\\n        // Interactions\\r\\n        successes = new bool[](calls.length);\\r\\n        results = new bytes[](calls.length);\\r\\n        for (uint256 i = 0; i < calls.length; i++) {\\r\\n            (bool success, bytes memory result) = address(this).delegatecall(calls[i]);\\r\\n            require(success || !revertOnFail, \\\"BoringBatchable: Tx failed\\\");\\r\\n            successes[i] = success;\\r\\n            results[i] = result;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n// T1 - T4: OK\\r\\ncontract BoringBatchable is BaseBoringBatchable {\\r\\n    // F1 - F9: OK\\r\\n    // F6: Parameters can be used front-run the permit and the user's permit will fail (due to nonce or other revert)\\r\\n    //     if part of a batch this could be used to grief once as the second call would not need the permit\\r\\n    // C1 - C21: OK\\r\\n    function permit(IERC20 token, address from, address to, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\r\\n        // Interactions\\r\\n        // X1 - X5\\r\\n        token.permit(from, to, amount, deadline, v, r, s);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0ead32c254f0f254fa07f8000f3e713b566c69a63c89c3d4052794021d6fb312\",\"license\":\"UNLICENSED\"},\"@bartjman/boring-solidity/contracts/BoringFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n// solhint-disable no-inline-assembly\\r\\n\\r\\npragma solidity 0.6.12;\\r\\nimport \\\"./interfaces/IMasterContract.sol\\\";\\r\\n\\r\\ncontract BoringFactory {\\r\\n    event LogDeploy(address indexed masterContract, bytes data, address indexed cloneAddress);\\r\\n\\r\\n    mapping(address => address) public masterContractOf; // Mapping from clone contracts to their masterContract\\r\\n\\r\\n    // Deploys a given master Contract as a clone.\\r\\n    function deploy(address masterContract, bytes calldata data) public payable {\\r\\n        require(masterContract != address(0), \\\"BoringFactory: No masterContract\\\");\\r\\n        bytes20 targetBytes = bytes20(masterContract); // Takes the first 20 bytes of the masterContract's address\\r\\n        address cloneAddress; // Address where the clone contract will reside.\\r\\n\\r\\n        // Creates clone, more info here: https://blog.openzeppelin.com/deep-dive-into-the-minimal-proxy-contract/\\r\\n        assembly {\\r\\n            let clone := mload(0x40)\\r\\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\r\\n            mstore(add(clone, 0x14), targetBytes)\\r\\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\r\\n            cloneAddress := create(0, clone, 0x37)\\r\\n        }\\r\\n        masterContractOf[cloneAddress] = masterContract;\\r\\n\\r\\n        IMasterContract(cloneAddress).init{value: msg.value}(data);\\r\\n\\r\\n        emit LogDeploy(masterContract, data, cloneAddress);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x3ac67ba0cf7262bea8eb115b8c4ce728593d70949e4ae6835f021182fd53f686\",\"license\":\"UNLICENSED\"},\"@bartjman/boring-solidity/contracts/BoringOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\\r\\n\\r\\n// P1 - P3: OK\\r\\npragma solidity 0.6.12;\\r\\n\\r\\n// Source: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol + Claimable.sol\\r\\n// Edited by BoringCrypto\\r\\n\\r\\n// T1 - T4: OK\\r\\ncontract BoringOwnableData {\\r\\n    // V1 - V5: OK\\r\\n    address public owner;\\r\\n    // V1 - V5: OK\\r\\n    address public pendingOwner;\\r\\n}\\r\\n\\r\\n// T1 - T4: OK\\r\\ncontract BoringOwnable is BoringOwnableData {\\r\\n    // E1: OK\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () public {\\r\\n        owner = msg.sender;\\r\\n        emit OwnershipTransferred(address(0), msg.sender);\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // C1 - C21: OK\\r\\n    function transferOwnership(address newOwner, bool direct, bool renounce) public onlyOwner {\\r\\n        if (direct) {\\r\\n            // Checks\\r\\n            require(newOwner != address(0) || renounce, \\\"Ownable: zero address\\\");\\r\\n\\r\\n            // Effects\\r\\n            emit OwnershipTransferred(owner, newOwner);\\r\\n            owner = newOwner;\\r\\n            pendingOwner = address(0);\\r\\n        } else {\\r\\n            // Effects\\r\\n            pendingOwner = newOwner;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // C1 - C21: OK\\r\\n    function claimOwnership() public {\\r\\n        address _pendingOwner = pendingOwner;\\r\\n        \\r\\n        // Checks\\r\\n        require(msg.sender == _pendingOwner, \\\"Ownable: caller != pending owner\\\");\\r\\n\\r\\n        // Effects\\r\\n        emit OwnershipTransferred(owner, _pendingOwner);\\r\\n        owner = _pendingOwner;\\r\\n        pendingOwner = address(0);\\r\\n    }\\r\\n\\r\\n    // M1 - M5: OK\\r\\n    // C1 - C21: OK\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xfafb586b248c1c697227f5745397562cfe5be2f04e19fb80fc79fc94e3afaba1\",\"license\":\"MIT\"},\"@bartjman/boring-solidity/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    // EIP 2612\\r\\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n}\",\"keccak256\":\"0x8004f86e4536cca55b8eeb2621fe18e1ee57d779396ddef50bce5bf70fb59867\",\"license\":\"MIT\"},\"@bartjman/boring-solidity/contracts/interfaces/IMasterContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ninterface IMasterContract {\\r\\n    function init(bytes calldata data) external payable;\\r\\n}\",\"keccak256\":\"0x31fdbe84840177d650d75b2852fb33520930a53e75a4de7ce0f042cf18bbf05b\",\"license\":\"MIT\"},\"@bartjman/boring-solidity/contracts/libraries/BoringERC20.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\n\\r\\nimport \\\"../interfaces/IERC20.sol\\\";\\r\\n\\r\\nlibrary BoringERC20 {\\r\\n    function safeSymbol(IERC20 token) internal view returns(string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(0x95d89b41));\\r\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function safeName(IERC20 token) internal view returns(string memory) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(0x06fdde03));\\r\\n        return success && data.length > 0 ? abi.decode(data, (string)) : \\\"???\\\";\\r\\n    }\\r\\n\\r\\n    function safeDecimals(IERC20 token) internal view returns (uint8) {\\r\\n        (bool success, bytes memory data) = address(token).staticcall(abi.encodeWithSelector(0x313ce567));\\r\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\r\\n    }\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 amount) internal {\\r\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(0xa9059cbb, to, amount));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: Transfer failed\\\");\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 amount) internal {\\r\\n        (bool success, bytes memory data) = address(token).call(abi.encodeWithSelector(0x23b872dd, from, to, amount));\\r\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), \\\"BoringERC20: TransferFrom failed\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x69f1ccf716991e5d6d64dc0e3bc3828fd1990bc18400d680b1aa1960675daaaa\",\"license\":\"UNLICENSED\"},\"@bartjman/boring-solidity/contracts/libraries/BoringMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n// a library for performing overflow-safe math, updated with awesomeness from of DappHub (https://github.com/dapphub/ds-math)\\r\\nlibrary BoringMath {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256 c) {require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");}\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256 c) {require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");}\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256 c) {require(b == 0 || (c = a * b)/b == a, \\\"BoringMath: Mul Overflow\\\");}\\r\\n    function to128(uint256 a) internal pure returns (uint128 c) {\\r\\n        require(a <= uint128(-1), \\\"BoringMath: uint128 Overflow\\\");\\r\\n        c = uint128(a);\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary BoringMath128 {\\r\\n    function add(uint128 a, uint128 b) internal pure returns (uint128 c) {require((c = a + b) >= b, \\\"BoringMath: Add Overflow\\\");}\\r\\n    function sub(uint128 a, uint128 b) internal pure returns (uint128 c) {require((c = a - b) <= a, \\\"BoringMath: Underflow\\\");}\\r\\n}\",\"keccak256\":\"0x7fd07387abfcf6627a8fc6ab5d5e1238ae0832923fbc1065c2039161ac949e4f\",\"license\":\"MIT\"},\"@bartjman/boring-solidity/contracts/libraries/BoringRebase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity 0.6.12;\\r\\nimport \\\"./BoringMath.sol\\\";\\r\\n\\r\\nstruct Rebase {\\r\\n    uint128 amount;\\r\\n    uint128 share;\\r\\n}\\r\\n\\r\\nlibrary RebaseLibrary {\\r\\n    using BoringMath for uint256;\\r\\n\\r\\n    function toShare(Rebase memory total, uint256 amount) internal pure returns (uint256 share) {\\r\\n        share = total.amount == 0 ? amount : amount.mul(total.share) / total.amount;\\r\\n    }\\r\\n\\r\\n    function toAmount(Rebase memory total, uint256 share) internal pure returns (uint256 amount) {\\r\\n        amount = total.share == 0 ? share : share.mul(total.amount) / total.share;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x62aa3a0e069d8f0ad30acb321744fe4dea5e16bd8ac2a94f76993c6fd0aa7add\",\"license\":\"UNLICENSED\"},\"contracts/BentoBoxPlus.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\n// The BentoBox Plus\\r\\n\\r\\n//  \\u2584\\u2584\\u2584\\u2584\\u00b7 \\u2584\\u2584\\u2584 . \\u2590 \\u2584 \\u2584\\u2584\\u2584\\u2584\\u2584      \\u2584\\u2584\\u2584\\u2584\\u00b7       \\u2590\\u2584\\u2022 \\u2584 \\r\\n//  \\u2590\\u2588 \\u2580\\u2588\\u25aa\\u2580\\u2584.\\u2580\\u00b7\\u2588\\u258c\\u2590\\u2588\\u2022\\u2588\\u2588  \\u25aa     \\u2590\\u2588 \\u2580\\u2588\\u25aa\\u25aa      \\u2588\\u258c\\u2588\\u258c\\u25aa\\r\\n//  \\u2590\\u2588\\u2580\\u2580\\u2588\\u2584\\u2590\\u2580\\u2580\\u25aa\\u2584\\u2590\\u2588\\u2590\\u2590\\u258c \\u2590\\u2588.\\u25aa \\u2584\\u2588\\u2580\\u2584 \\u2590\\u2588\\u2580\\u2580\\u2588\\u2584 \\u2584\\u2588\\u2580\\u2584  \\u00b7\\u2588\\u2588\\u00b7 \\r\\n//  \\u2588\\u2588\\u2584\\u25aa\\u2590\\u2588\\u2590\\u2588\\u2584\\u2584\\u258c\\u2588\\u2588\\u2590\\u2588\\u258c \\u2590\\u2588\\u258c\\u00b7\\u2590\\u2588\\u258c.\\u2590\\u258c\\u2588\\u2588\\u2584\\u25aa\\u2590\\u2588\\u2590\\u2588\\u258c.\\u2590\\u258c\\u25aa\\u2590\\u2588\\u00b7\\u2588\\u258c Plus!!\\r\\n//  \\u00b7\\u2580\\u2580\\u2580\\u2580  \\u2580\\u2580\\u2580 \\u2580\\u2580 \\u2588\\u25aa \\u2580\\u2580\\u2580  \\u2580\\u2588\\u2584\\u2580\\u25aa\\u00b7\\u2580\\u2580\\u2580\\u2580  \\u2580\\u2588\\u2584\\u2580\\u25aa\\u2022\\u2580\\u2580 \\u2580\\u2580\\r\\n\\r\\n// This contract stores funds, handles their transfers.\\r\\n\\r\\n// Copyright (c) 2020 BoringCrypto - All rights reserved\\r\\n// Twitter: @Boring_Crypto\\r\\n\\r\\n// WARNING!!! DO NOT USE!!! UNDER DEVELOPMENT!!!\\r\\n\\r\\n// solhint-disable avoid-low-level-calls\\r\\npragma solidity 0.6.12;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@bartjman/boring-solidity/contracts/libraries/BoringERC20.sol\\\";\\r\\nimport \\\"@bartjman/boring-solidity/contracts/libraries/BoringRebase.sol\\\";\\r\\nimport \\\"@bartjman/boring-solidity/contracts/BoringFactory.sol\\\";\\r\\nimport \\\"@bartjman/boring-solidity/contracts/BoringBatchable.sol\\\";\\r\\nimport \\\"./interfaces/IWETH.sol\\\";\\r\\nimport \\\"./MasterContractManager.sol\\\";\\r\\n\\r\\ninterface IFlashLoaner {\\r\\n    function executeOperation(IERC20[] calldata tokens, uint256[] calldata amounts, uint256[] calldata fees, bytes calldata params) external;\\r\\n}\\r\\n\\r\\ninterface IStrategy {\\r\\n    function balanceOf() external returns (uint256 amount);\\r\\n\\r\\n    // Send the assets to the Strategy and call skim to invest them\\r\\n    function skim() external returns (uint256 amount);\\r\\n\\r\\n    // Harvest any profits made converted to the asset and pass them to the caller\\r\\n    function harvest() external returns (uint256 amount);\\r\\n\\r\\n    // Withdraw assets. Withdraw will call harvest first. The returned amount includes the harvested amount.\\r\\n    function withdraw(uint256 amount) external returns (uint256 totalAmount);\\r\\n}\\r\\n\\r\\n// Note: Rebasing tokens ARE NOT supported and WILL cause loss of funds\\r\\ncontract BentoBoxPlus is BoringFactory, MasterContractManager, BoringBatchable {\\r\\n    using BoringMath for uint256;\\r\\n    using BoringMath128 for uint128;\\r\\n    using BoringERC20 for IERC20;\\r\\n    using RebaseLibrary for Rebase;\\r\\n\\r\\n    // E1: OK\\r\\n    event LogDeposit(IERC20 indexed token, address indexed from, address indexed to, uint256 amount, uint256 share);\\r\\n    // E1: OK\\r\\n    event LogWithdraw(IERC20 indexed token, address indexed from, address indexed to, uint256 amount, uint256 share);\\r\\n    event LogTransfer(IERC20 indexed token, address indexed from, address indexed to, uint256 share);\\r\\n    event LogFlashLoan(address indexed receiver, IERC20 indexed token, uint256 amount, uint256 feeAmount, address indexed user);\\r\\n\\r\\n    // V2: Private to save gas, to verify it's correct, check the constructor arguments\\r\\n    IERC20 private immutable wethToken;\\r\\n    mapping(IERC20 => mapping(address => uint256)) public balanceOf; // Balance per token per address/contract\\r\\n    mapping(IERC20 => Rebase) public totals;\\r\\n\\r\\n    constructor(IERC20 wethToken_) public {\\r\\n        wethToken = wethToken_;\\r\\n    }\\r\\n\\r\\n    function toShare(IERC20 token, uint256 amount) external view returns(uint256 share) {\\r\\n        return totals[token].toShare(amount);\\r\\n    }\\r\\n\\r\\n    function toAmount(IERC20 token, uint256 share) external view returns(uint256 amount) {\\r\\n        return totals[token].toAmount(share);\\r\\n    }\\r\\n\\r\\n    // M1 - M5: OK\\r\\n    // C1 - C23: OK\\r\\n    modifier allowed(address from) {\\r\\n        if (from != msg.sender && from != address(this)) {\\r\\n            address masterContract = masterContractOf[msg.sender];\\r\\n            require(masterContract != address(0), \\\"BentoBox: no masterContract\\\");\\r\\n            require(masterContractApproved[masterContract][from], \\\"BentoBox: Transfer not approved\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // F1 - F10: OK\\r\\n    // F3: Combined deposit(s) and skim functions into one\\r\\n    // C1 - C21: OK\\r\\n    // C2: wethToken is used multiple times, but this is an immutable, so after construction it's hardcoded in the contract\\r\\n    function deposit(\\r\\n        IERC20 token_, address from, address to, uint256 amount, uint256 share\\r\\n    ) public payable allowed(from) returns (uint256 amountOut, uint256 shareOut) {\\r\\n        // Checks\\r\\n        require(to != address(0) || from == address(this), \\\"BentoBox: to not set\\\"); // To avoid a bad UI from burning funds\\r\\n\\r\\n        // Effects\\r\\n        IERC20 token = token_ == IERC20(0) ? wethToken : token_;\\r\\n        Rebase memory total = totals[token];\\r\\n\\r\\n        // Skim\\r\\n        if (from == address(this)) {\\r\\n            // S1 - S4: OK\\r\\n            amount = token_ == IERC20(0) ? address(this).balance : token.balanceOf(address(this)).sub(total.amount);\\r\\n            share = 0;\\r\\n        }\\r\\n\\r\\n        // S1 - S4: OK\\r\\n        require(total.amount != 0 || token.totalSupply() > 0, \\\"BentoBox: No tokens\\\");\\r\\n        if (share == 0) { share = total.toShare(amount); } else { amount = total.toAmount(share); }\\r\\n\\r\\n        // If to is not address(0) add the share, otherwise skip this to take profit\\r\\n        if (to != address(0)) {\\r\\n            balanceOf[token][to] = balanceOf[token][to].add(share);\\r\\n            total.share = total.share.add(share.to128());\\r\\n        }\\r\\n        total.amount = total.amount.add(amount.to128());\\r\\n        totals[token] = total;\\r\\n\\r\\n        // Interactions\\r\\n        // During the first deposit, we check that this token is 'real'\\r\\n        if (token_ == IERC20(0)) {\\r\\n            // X1 - X5: OK\\r\\n            // X2: If the WETH implementation is faulty or malicious, it will block adding ETH (but we know the WETH implementation)\\r\\n            IWETH(address(wethToken)).deposit{value: amount}();\\r\\n        } else if (from != address(this)) {\\r\\n            // X1 - X5: OK\\r\\n            // X2: If the token implementation is faulty or malicious, it will block adding tokens. Good.\\r\\n            token.safeTransferFrom(from, address(this), amount);\\r\\n        }\\r\\n        emit LogDeposit(token, from, to, amount, share);\\r\\n        amountOut = amount;\\r\\n        shareOut = share;\\r\\n    }\\r\\n\\r\\n    // F1 - F10: OK\\r\\n    // C1 - C22: OK\\r\\n    // C2: wethToken is used multiple times, but this is an immutable, so after construction it's hardcoded in the contract\\r\\n    function withdraw(\\r\\n        IERC20 token_, address from, address to, uint256 amount, uint256 share\\r\\n    ) public allowed(from) returns (uint256 amountOut, uint256 shareOut) {\\r\\n        // Checks\\r\\n        require(to != address(0), \\\"BentoBox: to not set\\\"); // To avoid a bad UI from burning funds\\r\\n\\r\\n        // Effects\\r\\n        IERC20 token = token_ == IERC20(0) ? wethToken : token_;\\r\\n        Rebase memory total = totals[token];\\r\\n        if (share == 0) { share = total.toShare(amount); } else { amount = total.toAmount(share); }\\r\\n\\r\\n        balanceOf[token][from] = balanceOf[token][from].sub(share);\\r\\n        total.amount = total.amount.sub(amount.to128());\\r\\n        total.share = total.share.sub(share.to128());\\r\\n        // There have to be at least 100000 shares left at all times to prevent reseting the share/amount ratio\\r\\n        require(total.share >= 100000, \\\"BentoBox: cannot empty\\\");\\r\\n        totals[token] = total;\\r\\n\\r\\n        // Interactions\\r\\n        if (token_ == IERC20(0)) {\\r\\n            // X1 - X5: OK\\r\\n            // X2, X3: A revert or big gas usage in the WETH contract could block withdrawals, but WETH9 is fine.\\r\\n            IWETH(address(wethToken)).withdraw(amount);\\r\\n            // X1 - X5: OK\\r\\n            // X2, X3: A revert or big gas usage could block, however, the to address is under control of the caller.\\r\\n            (bool success,) = to.call{value: amount}(\\\"\\\");\\r\\n            require(success, \\\"BentoBox: ETH transfer failed\\\");\\r\\n        } else {\\r\\n            // X1 - X5: OK\\r\\n            // X2, X3: A malicious token could block withdrawal of just THAT token.\\r\\n            //         masterContracts may want to take care not to rely on withdraw always succeeding.\\r\\n            token.safeTransfer(to, amount);\\r\\n        }\\r\\n        emit LogWithdraw(token, from, to, amount, share);\\r\\n        amountOut = amount;\\r\\n        shareOut = share;\\r\\n    }\\r\\n\\r\\n    // *** Approved contract actions *** //\\r\\n    // Clones of master contracts can transfer from any account that has approved them\\r\\n    // C2: This isn't combined with transferMultiple for gas optimization\\r\\n    function transfer(IERC20 token, address from, address to, uint256 share) public allowed(from) {\\r\\n        require(to != address(0), \\\"BentoBox: to not set\\\"); // To avoid a bad UI from burning funds\\r\\n        balanceOf[token][from] = balanceOf[token][from].sub(share);\\r\\n        balanceOf[token][to] = balanceOf[token][to].add(share);\\r\\n\\r\\n        emit LogTransfer(token, from, to, share);\\r\\n    }\\r\\n\\r\\n    // C2: This isn't combined with transfer for gas optimization\\r\\n    function transferMultiple(IERC20 token, address from, address[] calldata tos, uint256[] calldata shares) public allowed(from) {\\r\\n        require(tos[0] != address(0), \\\"BentoBox: to[0] not set\\\"); // To avoid a bad UI from burning funds\\r\\n        uint256 totalAmount;\\r\\n        for (uint256 i=0; i < tos.length; i++) {\\r\\n            address to = tos[i];\\r\\n            balanceOf[token][to] = balanceOf[token][to].add(shares[i]);\\r\\n            totalAmount = totalAmount.add(shares[i]);\\r\\n            emit LogTransfer(token, from, to, shares[i]);\\r\\n        }\\r\\n        balanceOf[token][from] = balanceOf[token][from].sub(totalAmount);\\r\\n    }\\r\\n\\r\\n    // Take out a flash loan\\r\\n    function flashLoan(address receiver, IERC20[] calldata tokens, uint256[] calldata amounts, address user, bytes calldata params) public {\\r\\n        uint256[] memory feeAmounts = new uint256[](tokens.length);\\r\\n        \\r\\n        uint256 length = tokens.length;\\r\\n        for (uint256 i = 0; i < length; i++) {\\r\\n            uint256 amount = amounts[i];\\r\\n            feeAmounts[i] = amount.mul(5) / 10000;\\r\\n\\r\\n            tokens[i].safeTransfer(receiver, amounts[i]);\\r\\n        }\\r\\n\\r\\n        IFlashLoaner(user).executeOperation(tokens, amounts, feeAmounts, params);\\r\\n\\r\\n        for (uint256 i = 0; i < length; i++) {\\r\\n            Rebase memory total = totals[tokens[i]];\\r\\n            IERC20 token = tokens[i];\\r\\n            uint128 feeAmount = feeAmounts[i].to128();\\r\\n            require(token.balanceOf(address(this)) == total.amount.add(feeAmount), \\\"BentoBoxPlus: Wrong amount\\\");\\r\\n            total.amount = total.amount.add(feeAmount);\\r\\n            totals[token] = total;\\r\\n            emit LogFlashLoan(receiver, token, amounts[i], feeAmounts[i], user);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // solhint-disable-next-line no-empty-blocks\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x454568cb1b51c7ee2111568a3a51b899a2ba6216553f4dc0f9e581aa31f5ad79\",\"license\":\"UNLICENSED\"},\"contracts/MasterContractManager.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\n// Audit on 5-Jan-2021 by Keno and BoringCrypto\\r\\n\\r\\n// P1 - P3: OK\\r\\npragma solidity 0.6.12;\\r\\nimport \\\"@bartjman/boring-solidity/contracts/BoringOwnable.sol\\\";\\r\\n// solhint-disable no-inline-assembly\\r\\n\\r\\n// T1 - T4: OK\\r\\ncontract MasterContractManager is BoringOwnable {\\r\\n    // E1: OK\\r\\n    event LogWhiteListMasterContract(address indexed masterContract, bool approved);\\r\\n    // E1: OK\\r\\n    event LogSetMasterContractApproval(address indexed masterContract, address indexed user, bool approved);\\r\\n\\r\\n    // V1 - V5: OK\\r\\n    mapping(address => mapping(address => bool)) public masterContractApproved; // masterContract to user to approval state\\r\\n    // V1 - V5: OK\\r\\n    mapping(address => bool) public whitelistedMasterContracts;\\r\\n    // V1 - V5: OK\\r\\n    mapping(address => uint256) public nonces;\\r\\n\\r\\n    // F1 - F8: OK\\r\\n    // C1 - C19: OK\\r\\n    // C20: Recalculating the domainSeparator is cheaper than reading it from storage\\r\\n    function domainSeparator() private view returns (bytes32) {\\r\\n        uint256 chainId;\\r\\n        assembly {chainId := chainid()}\\r\\n        return keccak256(abi.encode(\\r\\n            keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"), \\r\\n            \\\"BentoBox V2\\\",\\r\\n            chainId, \\r\\n            address(this)\\r\\n        ));\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // F4: Approving masterContract 0 would be very bad, however it cannot be approved by the user and the owner should know better\\r\\n    // C1 - C21: OK\\r\\n    function whitelistMasterContract(address masterContract, bool approved) public onlyOwner {\\r\\n        whitelistedMasterContracts[masterContract] = approved;\\r\\n        emit LogWhiteListMasterContract(masterContract, approved);\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // F4: Don't allow masterContract 0 to be approved. Unknown contracts will have a masterContract of 0.\\r\\n    // F4: User can't be 0 for signed approvals because the recoveredAddress will be 0 if ecrecover fails\\r\\n    // C1 - C21: OK\\r\\n    function setMasterContractApproval(address user, address masterContract, bool approved, uint8 v, bytes32 r, bytes32 s) public {\\r\\n        // Checks\\r\\n        require(masterContract != address(0), \\\"MasterCMgr: masterC not set\\\"); // Important for security\\r\\n\\r\\n        // If no signature is provided, the fallback is executed\\r\\n        if (r == 0  && s == 0 && v == 0) {\\r\\n            require(user == msg.sender, \\\"MasterCMgr: user not sender\\\");\\r\\n            require(whitelistedMasterContracts[masterContract], \\\"MasterCMgr: not whitelisted\\\");\\r\\n        } else {\\r\\n            require(user != address(0), \\\"MasterCMgr: User cannot be 0\\\"); // Important for security\\r\\n            // C10: nonce + chainId are used to prevent replays\\r\\n            // C11: signature is EIP-712 compliant\\r\\n            // C12: abi.encodePacked has fixed length parameters\\r\\n            bytes32 digest = keccak256(abi.encodePacked(\\r\\n                \\\"\\\\x19\\\\x01\\\", domainSeparator(),\\r\\n                keccak256(abi.encode(\\r\\n                    // keccak256(\\\"SetMasterContractApproval(string warning,address user,address masterContract,bool approved,uint256 nonce)\\\");\\r\\n                    0x1962bc9f5484cb7a998701b81090e966ee1fce5771af884cceee7c081b14ade2,\\r\\n                    approved ? \\\"Give FULL access to funds in (and approved to) BentoBox?\\\" : \\\"Revoke access to BentoBox?\\\",\\r\\n                    user, masterContract, approved, nonces[user]++\\r\\n                ))\\r\\n            ));\\r\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\r\\n            require(recoveredAddress == user, \\\"MasterCMgr: Invalid Signature\\\");\\r\\n        }\\r\\n\\r\\n        // Effects\\r\\n        masterContractApproved[masterContract][user] = approved;\\r\\n        emit LogSetMasterContractApproval(masterContract, user, approved);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x2272780afe7b05a092a62fbbe88a791c5736875fcfb59f35c63a99dbc7f7293c\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.6.12;\\r\\n\\r\\ninterface IWETH {\\r\\n    function deposit() external payable;\\r\\n    function withdraw(uint256) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x9ca05b1652fb6043f9afee92d0882434bd8bea864c19efbf358b6cb1865dde95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620033253803806200332583398101604081905262000034916200008a565b600180546001600160a01b031916339081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360601b6001600160601b031916608052620000ba565b6000602082840312156200009c578081fd5b81516001600160a01b0381168114620000b3578182fd5b9392505050565b60805160601c61323e620000e76000398061053e528061083e5280610f7c528061114d525061323e6000f3fe6080604052600436106101595760003560e01c806397da6d30116100bb578063d339056d1161007f578063e97fac0511610059578063e97fac05146103e6578063f18d03cc146103f9578063f7888aec1461041957610160565b8063d339056d14610391578063d9ac7b84146103b1578063e30c3978146103d157610160565b806397da6d30146102f05780639cb6f7cf14610310578063bafe4f1414610330578063c0a47c9314610350578063d2423b511461037057610160565b80634e71e0c81161011d5780637ecebe00116100f75780637ecebe001461028e5780638da5cb5b146102ae57806391e0eab5146102d057610160565b80634e71e0c81461022b5780634ffe34db14610240578063733a9d7c1461026e57610160565b806302b9446c14610165578063078dfbe71461018f5780630fca8843146101b157806312a90c8a146101d1578063383dbe71146101fe57610160565b3661016057005b600080fd5b610178610173366004612696565b610439565b604051610186929190613127565b60405180910390f35b34801561019b57600080fd5b506101af6101aa366004612531565b610941565b005b3480156101bd57600080fd5b506101af6101cc366004612771565b610a28565b3480156101dd57600080fd5b506101f16101ec366004612380565b610cad565b6040516101869190612b16565b34801561020a57600080fd5b5061021e610219366004612803565b610cc2565b604051610186919061311e565b34801561023757600080fd5b506101af610d16565b34801561024c57600080fd5b5061026061025b366004612380565b610da4565b604051610186929190613104565b34801561027a57600080fd5b506101af610289366004612504565b610dca565b34801561029a57600080fd5b5061021e6102a9366004612380565b610e54565b3480156102ba57600080fd5b506102c3610e66565b6040516101869190612920565b3480156102dc57600080fd5b506101f16102eb3660046123a3565b610e75565b3480156102fc57600080fd5b5061017861030b366004612696565b610e95565b34801561031c57600080fd5b506101af61032b366004612447565b611299565b34801561033c57600080fd5b506102c361034b366004612380565b6116b7565b34801561035c57600080fd5b506101af61036b3660046123db565b6116d2565b61038361037e3660046125ce565b61199a565b6040516101869291906129b2565b34801561039d57600080fd5b506101af6103ac3660046126f0565b611b20565b3480156103bd57600080fd5b5061021e6103cc366004612803565b611b94565b3480156103dd57600080fd5b506102c3611bdf565b6101af6103f436600461257b565b611bee565b34801561040557600080fd5b506101af610414366004612646565b611d56565b34801561042557600080fd5b5061021e610434366004612634565b611efa565b600080856001600160a01b038116331480159061045f57506001600160a01b0381163014155b156104ea57336000908152602081905260409020546001600160a01b0316806104a35760405162461bcd60e51b815260040161049a90612fbc565b60405180910390fd5b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff166104e85760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b03861615158061050957506001600160a01b03871630145b6105255760405162461bcd60e51b815260040161049a90612e41565b60006001600160a01b0389161561053c578861055e565b7f00000000000000000000000000000000000000000000000000000000000000005b90506105686122cf565b506001600160a01b038082166000908152600760209081526040918290208251808401909352546001600160801b038082168452600160801b9091041690820152908916301415610662576001600160a01b038a16156106595780516040516370a0823160e01b8152610654916001600160801b0316906001600160a01b038516906370a08231906105fe903090600401612920565b60206040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e919061282e565b90611f17565b61065b565b475b9650600095505b80516001600160801b03161515806106ea57506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e8919061282e565b115b6107065760405162461bcd60e51b815260040161049a90612d2e565b8561071c576107158188611f3a565b9550610729565b6107268187611f7f565b96505b6001600160a01b038816156107bd576001600160a01b038083166000908152600660209081526040808320938c16835292905220546107689087611fb5565b6001600160a01b038084166000908152600660209081526040808320938d16835292905220556107ae61079a87611fd8565b60208301516001600160801b031690612005565b6001600160801b031660208201525b6107da6107c988611fd8565b82516001600160801b031690612005565b6001600160801b0390811682526001600160a01b03808416600090815260076020908152604090912084518154928601518516600160801b029085166fffffffffffffffffffffffffffffffff1990931692909217909316179091558a166108b5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0886040518263ffffffff1660e01b81526004016000604051808303818588803b15801561089757600080fd5b505af11580156108ab573d6000803e3d6000fd5b50505050506108da565b6001600160a01b03891630146108da576108da6001600160a01b0383168a308a612034565b876001600160a01b0316896001600160a01b0316836001600160a01b03167fb2346165e782564f17f5b7e555c21f4fd96fbc93458572bf0113ea35a958fc558a8a604051610929929190613127565b60405180910390a45094989397509295505050505050565b6001546001600160a01b0316331461096b5760405162461bcd60e51b815260040161049a90612e78565b8115610a07576001600160a01b0383161515806109855750805b6109a15760405162461bcd60e51b815260040161049a90612cf7565b6001546040516001600160a01b038086169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0385166001600160a01b031991821617909155600280549091169055610a23565b600280546001600160a01b0319166001600160a01b0385161790555b505050565b846001600160a01b0381163314801590610a4b57506001600160a01b0381163014155b15610acd57336000908152602081905260409020546001600160a01b031680610a865760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16610acb5760405162461bcd60e51b815260040161049a90612ead565b505b600085858281610ad957fe5b9050602002016020810190610aee9190612380565b6001600160a01b03161415610b155760405162461bcd60e51b815260040161049a90612e0a565b6000805b85811015610c46576000878783818110610b2f57fe5b9050602002016020810190610b449190612380565b9050610b89868684818110610b5557fe5b6001600160a01b03808f16600090815260066020908152604080832093891683529281529190205493910201359050611fb5565b6001600160a01b03808c16600090815260066020908152604080832093861683529290522055610bd4868684818110610bbe57fe5b9050602002013584611fb590919063ffffffff16565b9250806001600160a01b0316896001600160a01b03168b6001600160a01b03167f6eabe333476233fd382224f233210cb808a7bc4c4de64f9d76628bf63c677b1a898987818110610c2157fe5b90506020020135604051610c35919061311e565b60405180910390a450600101610b19565b506001600160a01b038089166000908152600660209081526040808320938b1683529290522054610c779082611f17565b6001600160a01b0398891660009081526006602090815260408083209a909b168252989098529790962096909655505050505050565b60046020526000908152604090205460ff1681565b6001600160a01b03821660009081526007602090815260408083208151808301909252546001600160801b038082168352600160801b9091041691810191909152610d0d9083611f7f565b90505b92915050565b6002546001600160a01b0316338114610d415760405162461bcd60e51b815260040161049a90612ee4565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b039092166001600160a01b0319928316179055600280549091169055565b6007602052600090815260409020546001600160801b0380821691600160801b90041682565b6001546001600160a01b03163314610df45760405162461bcd60e51b815260040161049a90612e78565b6001600160a01b03821660008181526004602052604090819020805460ff1916841515179055517f31a1e0eac44b54ac6c2a2efa87e92c83405ffcf33fceef02a7bca695130e260090610e48908490612b16565b60405180910390a25050565b60056020526000908152604090205481565b6001546001600160a01b031681565b600360209081526000928352604080842090915290825290205460ff1681565b600080856001600160a01b0381163314801590610ebb57506001600160a01b0381163014155b15610f3d57336000908152602081905260409020546001600160a01b031680610ef65760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16610f3b5760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b038616610f635760405162461bcd60e51b815260040161049a90612e41565b60006001600160a01b03891615610f7a5788610f9c565b7f00000000000000000000000000000000000000000000000000000000000000005b9050610fa66122cf565b506001600160a01b0381166000908152600760209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015285610ffc57610ff58188611f3a565b9550611009565b6110068187611f7f565b96505b6001600160a01b038083166000908152600660209081526040808320938d16835292905220546110399087611f17565b6001600160a01b038084166000908152600660209081526040808320938e168352929052205561107c61106b88611fd8565b82516001600160801b031690612125565b6001600160801b031681526110a761109387611fd8565b60208301516001600160801b031690612125565b6001600160801b031660208201819052620186a011156110d95760405162461bcd60e51b815260040161049a90612cc0565b6001600160a01b03828116600090815260076020908152604090912083518154928501516fffffffffffffffffffffffffffffffff199093166001600160801b03918216178116600160801b91909316029190911790558a1661123657604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90611182908a9060040161311e565b600060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506000886001600160a01b0316886040516111cd9061291d565b60006040518083038185875af1925050503d806000811461120a576040519150601f19603f3d011682016040523d82523d6000602084013e61120f565b606091505b50509050806112305760405162461bcd60e51b815260040161049a90613096565b5061124a565b61124a6001600160a01b0383168989612154565b876001600160a01b0316896001600160a01b0316836001600160a01b03167fad9ab9ee6953d4d177f4a03b3a3ac3178ffcb9816319f348060194aa76b144868a8a604051610929929190613127565b60608667ffffffffffffffff811180156112b257600080fd5b506040519080825280602002602001820160405280156112dc578160200160208202803683370190505b5090508660005b8181101561138a5760008888838181106112f957fe5b90506020020135905061271061131960058361224290919063ffffffff16565b8161132057fe5b0484838151811061132d57fe5b6020026020010181815250506113818c8a8a8581811061134957fe5b905060200201358d8d8681811061135c57fe5b90506020020160208101906113719190612380565b6001600160a01b03169190612154565b506001016112e3565b50604051631b77b6af60e11b81526001600160a01b038616906336ef6d5e906113c3908c908c908c908c9089908c908c90600401612a4c565b600060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b5050505060005b818110156116aa576114086122cf565b600760008c8c8581811061141857fe5b905060200201602081019061142d9190612380565b6001600160a01b03168152602080820192909252604090810160009081208251808401909352546001600160801b038082168452600160801b909104169282019290925291508b8b8481811061147f57fe5b90506020020160208101906114949190612380565b905060006114b48685815181106114a757fe5b6020026020010151611fd8565b83519091506114cc906001600160801b031682612005565b6001600160801b0316826001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016115019190612920565b60206040518083038186803b15801561151957600080fd5b505afa15801561152d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611551919061282e565b1461156e5760405162461bcd60e51b815260040161049a90612d65565b8251611583906001600160801b031682612005565b83600001906001600160801b031690816001600160801b0316815250508260076000846001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050886001600160a01b0316826001600160a01b03168f6001600160a01b03167f3be9b85936d5d30a1655ea116a17ee3d827b2cd428cc026ce5bf2ac46a2232048e8e8981811061166e57fe5b905060200201358a898151811061168157fe5b6020026020010151604051611697929190613127565b60405180910390a45050506001016113f8565b5050505050505050505050565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b0385166116f85760405162461bcd60e51b815260040161049a90612f85565b81158015611704575080155b8015611711575060ff8316155b1561177b576001600160a01b038616331461173e5760405162461bcd60e51b815260040161049a90612c1b565b6001600160a01b03851660009081526004602052604090205460ff166117765760405162461bcd60e51b815260040161049a9061305f565b611926565b6001600160a01b0386166117a15760405162461bcd60e51b815260040161049a90613028565b60006117ab612279565b7f1962bc9f5484cb7a998701b81090e966ee1fce5771af884cceee7c081b14ade28661180c576040518060400160405280601a81526020017f5265766f6b652061636365737320746f2042656e746f426f783f000000000000815250611826565b6040518060600160405280603881526020016131d1603891395b6001600160a01b038a1660009081526005602090815260409182902080546001810190915591516118609493928d928d928d929101612b9d565b60405160208183030381529060405280519060200120604051602001611887929190612902565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516118c49493929190612b63565b6020604051602081039080840390855afa1580156118e6573d6000803e3d6000fd5b505050602060405103519050876001600160a01b0316816001600160a01b0316146119235760405162461bcd60e51b815260040161049a90612f19565b50505b6001600160a01b038581166000818152600360209081526040808320948b168084529490915290819020805460ff1916881515179055517f5f6ebb64ba012a851c6f014e6cad458ddf213d1512049b31cd06365c2b0592579061198a908890612b16565b60405180910390a3505050505050565b6060808367ffffffffffffffff811180156119b457600080fd5b506040519080825280602002602001820160405280156119de578160200160208202803683370190505b5091508367ffffffffffffffff811180156119f857600080fd5b50604051908082528060200260200182016040528015611a2c57816020015b6060815260200190600190039081611a175790505b50905060005b84811015611b17576000606030888885818110611a4b57fe5b9050602002810190611a5d9190613135565b604051611a6b9291906128d6565b600060405180830381855af49150503d8060008114611aa6576040519150601f19603f3d011682016040523d82523d6000602084013e611aab565b606091505b50915091508180611aba575085155b611ad65760405162461bcd60e51b815260040161049a90612c89565b81858481518110611ae357fe5b60200260200101901515908115158152505080848481518110611b0257fe5b60209081029190910101525050600101611a32565b50935093915050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf90611b58908a908a908a908a908a908a908a90600401612958565b600060405180830381600087803b158015611b7257600080fd5b505af1158015611b86573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b03821660009081526007602090815260408083208151808301909252546001600160801b038082168352600160801b9091041691810191909152610d0d9083611f3a565b6002546001600160a01b031681565b6001600160a01b038316611c145760405162461bcd60e51b815260040161049a90612f50565b60008360601b905060006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f06001600160a01b038181166000818152602081905260409081902080546001600160a01b031916938b16939093179092559051631377d1f560e21b81529193509150634ddf47d4903490611cd09088908890600401612b81565b6000604051808303818588803b158015611ce957600080fd5b505af1158015611cfd573d6000803e3d6000fd5b5050505050806001600160a01b0316856001600160a01b03167fd62166f3c2149208e51788b1401cc356bf5da1fc6c7886a32e18570f57d88b3b8686604051611d47929190612b81565b60405180910390a35050505050565b826001600160a01b0381163314801590611d7957506001600160a01b0381163014155b15611dfb57336000908152602081905260409020546001600160a01b031680611db45760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16611df95760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b038316611e215760405162461bcd60e51b815260040161049a90612e41565b6001600160a01b03808616600090815260066020908152604080832093881683529290522054611e519083611f17565b6001600160a01b03868116600090815260066020908152604080832089851684529091528082209390935590851681522054611e8d9083611fb5565b6001600160a01b0380871660008181526006602090815260408083208986168085529252918290209490945551918716917f6eabe333476233fd382224f233210cb808a7bc4c4de64f9d76628bf63c677b1a90611eeb90879061311e565b60405180910390a45050505050565b600660209081526000928352604080842090915290825290205481565b80820382811115610d105760405162461bcd60e51b815260040161049a90612be4565b81516000906001600160801b031615611f7957825160208401516001600160801b0391821691611f6c91859116612242565b81611f7357fe5b04610d0d565b50919050565b600082602001516001600160801b0316600014611f7957602083015183516001600160801b0391821691611f6c91859116612242565b81810181811015610d105760405162461bcd60e51b815260040161049a90612dd3565b60006001600160801b038211156120015760405162461bcd60e51b815260040161049a90612d9c565b5090565b8181016001600160801b038083169082161015610d105760405162461bcd60e51b815260040161049a90612dd3565b60006060856001600160a01b03166323b872dd86868660405160240161205c93929190612934565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161209591906128e6565b6000604051808303816000865af19150503d80600081146120d2576040519150601f19603f3d011682016040523d82523d6000602084013e6120d7565b606091505b50915091508180156121015750805115806121015750808060200190518101906121019190612618565b61211d5760405162461bcd60e51b815260040161049a90612ff3565b505050505050565b8082036001600160801b038084169082161115610d105760405162461bcd60e51b815260040161049a90612be4565b60006060846001600160a01b031663a9059cbb858560405160240161217a929190612999565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516121b391906128e6565b6000604051808303816000865af19150503d80600081146121f0576040519150601f19603f3d011682016040523d82523d6000602084013e6121f5565b606091505b509150915081801561221f57508051158061221f57508080602001905181019061221f9190612618565b61223b5760405162461bcd60e51b815260040161049a90612c52565b5050505050565b600081158061225d5750508082028282828161225a57fe5b04145b610d105760405162461bcd60e51b815260040161049a906130cd565b60405160009046906122b3907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8669083903090602001612b21565b6040516020818303038152906040528051906020012091505090565b604080518082019091526000808252602082015290565b60008083601f8401126122f7578182fd5b50813567ffffffffffffffff81111561230e578182fd5b602083019150836020808302850101111561232857600080fd5b9250929050565b60008083601f840112612340578182fd5b50813567ffffffffffffffff811115612357578182fd5b60208301915083602082850101111561232857600080fd5b803560ff81168114610d1057600080fd5b600060208284031215612391578081fd5b813561239c816131aa565b9392505050565b600080604083850312156123b5578081fd5b82356123c0816131aa565b915060208301356123d0816131aa565b809150509250929050565b60008060008060008060c087890312156123f3578182fd5b86356123fe816131aa565b9550602087013561240e816131aa565b9450604087013561241e816131c2565b935061242d886060890161236f565b92506080870135915060a087013590509295509295509295565b60008060008060008060008060a0898b031215612462578182fd5b883561246d816131aa565b9750602089013567ffffffffffffffff80821115612489578384fd5b6124958c838d016122e6565b909950975060408b01359150808211156124ad578384fd5b6124b98c838d016122e6565b909750955060608b013591506124ce826131aa565b90935060808a013590808211156124e3578384fd5b506124f08b828c0161232f565b999c989b5096995094979396929594505050565b60008060408385031215612516578182fd5b8235612521816131aa565b915060208301356123d0816131c2565b600080600060608486031215612545578283fd5b8335612550816131aa565b92506020840135612560816131c2565b91506040840135612570816131c2565b809150509250925092565b60008060006040848603121561258f578283fd5b833561259a816131aa565b9250602084013567ffffffffffffffff8111156125b5578283fd5b6125c18682870161232f565b9497909650939450505050565b6000806000604084860312156125e2578283fd5b833567ffffffffffffffff8111156125f8578384fd5b612604868287016122e6565b9094509250506020840135612570816131c2565b600060208284031215612629578081fd5b815161239c816131c2565b600080604083850312156123b5578182fd5b6000806000806080858703121561265b578182fd5b8435612666816131aa565b93506020850135612676816131aa565b92506040850135612686816131aa565b9396929550929360600135925050565b600080600080600060a086880312156126ad578283fd5b85356126b8816131aa565b945060208601356126c8816131aa565b935060408601356126d8816131aa565b94979396509394606081013594506080013592915050565b600080600080600080600080610100898b03121561270c578182fd5b8835612717816131aa565b97506020890135612727816131aa565b96506040890135612737816131aa565b955060608901359450608089013593506127548a60a08b0161236f565b925060c0890135915060e089013590509295985092959890939650565b60008060008060008060808789031215612789578384fd5b8635612794816131aa565b955060208701356127a4816131aa565b9450604087013567ffffffffffffffff808211156127c0578586fd5b6127cc8a838b016122e6565b909650945060608901359150808211156127e4578384fd5b506127f189828a016122e6565b979a9699509497509295939492505050565b60008060408385031215612815578182fd5b8235612820816131aa565b946020939093013593505050565b60006020828403121561283f578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561287557815187529582019590820190600101612859565b509495945050505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526128c281602086016020860161317a565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b600082516128f881846020870161317a565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b828110156129ed5781511515845292840192908401906001016129cf565b50505083810382850152808551612a04818461311e565b91508192508381028201848801865b83811015612a3d578583038552612a2b8383516128aa565b94870194925090860190600101612a13565b50909998505050505050505050565b6080808252810187905260008860a08301825b8a811015612a8f5760208335612a74816131aa565b6001600160a01b031683529283019290910190600101612a5f565b5083810360208501528781527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881115612ac7578283fd5b602088029150818960208301370160208181018381528483039091016040850152612af28188612846565b9150508281036060840152612b08818587612880565b9a9950505050505050505050565b901515815260200190565b928352608060208401819052600b908401526a2132b73a37a137bc102b1960a91b60a084015260408301919091526001600160a01b0316606082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252612b95602083018486612880565b949350505050565b600087825260c06020830152612bb660c08301886128aa565b6001600160a01b039687166040840152949095166060820152911515608083015260a0909101529392505050565b60208082526015908201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604082015260600190565b6020808252601b908201527f4d6173746572434d67723a2075736572206e6f742073656e6465720000000000604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b6020808252601a908201527f426f72696e67426174636861626c653a205478206661696c6564000000000000604082015260600190565b60208082526016908201527f42656e746f426f783a2063616e6e6f7420656d70747900000000000000000000604082015260600190565b60208082526015908201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604082015260600190565b60208082526013908201527f42656e746f426f783a204e6f20746f6b656e7300000000000000000000000000604082015260600190565b6020808252601a908201527f42656e746f426f78506c75733a2057726f6e6720616d6f756e74000000000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b60208082526017908201527f42656e746f426f783a20746f5b305d206e6f7420736574000000000000000000604082015260600190565b60208082526014908201527f42656e746f426f783a20746f206e6f7420736574000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f42656e746f426f783a205472616e73666572206e6f7420617070726f76656400604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b6020808252601d908201527f4d6173746572434d67723a20496e76616c6964205369676e6174757265000000604082015260600190565b6020808252818101527f426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374604082015260600190565b6020808252601b908201527f4d6173746572434d67723a206d617374657243206e6f74207365740000000000604082015260600190565b6020808252601b908201527f42656e746f426f783a206e6f206d6173746572436f6e74726163740000000000604082015260600190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b6020808252601c908201527f4d6173746572434d67723a20557365722063616e6e6f74206265203000000000604082015260600190565b6020808252601b908201527f4d6173746572434d67723a206e6f742077686974656c69737465640000000000604082015260600190565b6020808252601d908201527f42656e746f426f783a20455448207472616e73666572206661696c6564000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6001600160801b0392831681529116602082015260400190565b90815260200190565b918252602082015260400190565b6000808335601e1984360301811261314b578283fd5b83018035915067ffffffffffffffff821115613165578283fd5b60200191503681900382131561232857600080fd5b60005b8381101561319557818101518382015260200161317d565b838111156131a4576000848401525b50505050565b6001600160a01b03811681146131bf57600080fd5b50565b80151581146131bf57600080fdfe476976652046554c4c2061636365737320746f2066756e647320696e2028616e6420617070726f76656420746f292042656e746f426f783fa264697066735822122010d9b156eb89cf34f67acfbfa9c0a911f54408d4a67bf6d191aa3933792914cf64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106101595760003560e01c806397da6d30116100bb578063d339056d1161007f578063e97fac0511610059578063e97fac05146103e6578063f18d03cc146103f9578063f7888aec1461041957610160565b8063d339056d14610391578063d9ac7b84146103b1578063e30c3978146103d157610160565b806397da6d30146102f05780639cb6f7cf14610310578063bafe4f1414610330578063c0a47c9314610350578063d2423b511461037057610160565b80634e71e0c81161011d5780637ecebe00116100f75780637ecebe001461028e5780638da5cb5b146102ae57806391e0eab5146102d057610160565b80634e71e0c81461022b5780634ffe34db14610240578063733a9d7c1461026e57610160565b806302b9446c14610165578063078dfbe71461018f5780630fca8843146101b157806312a90c8a146101d1578063383dbe71146101fe57610160565b3661016057005b600080fd5b610178610173366004612696565b610439565b604051610186929190613127565b60405180910390f35b34801561019b57600080fd5b506101af6101aa366004612531565b610941565b005b3480156101bd57600080fd5b506101af6101cc366004612771565b610a28565b3480156101dd57600080fd5b506101f16101ec366004612380565b610cad565b6040516101869190612b16565b34801561020a57600080fd5b5061021e610219366004612803565b610cc2565b604051610186919061311e565b34801561023757600080fd5b506101af610d16565b34801561024c57600080fd5b5061026061025b366004612380565b610da4565b604051610186929190613104565b34801561027a57600080fd5b506101af610289366004612504565b610dca565b34801561029a57600080fd5b5061021e6102a9366004612380565b610e54565b3480156102ba57600080fd5b506102c3610e66565b6040516101869190612920565b3480156102dc57600080fd5b506101f16102eb3660046123a3565b610e75565b3480156102fc57600080fd5b5061017861030b366004612696565b610e95565b34801561031c57600080fd5b506101af61032b366004612447565b611299565b34801561033c57600080fd5b506102c361034b366004612380565b6116b7565b34801561035c57600080fd5b506101af61036b3660046123db565b6116d2565b61038361037e3660046125ce565b61199a565b6040516101869291906129b2565b34801561039d57600080fd5b506101af6103ac3660046126f0565b611b20565b3480156103bd57600080fd5b5061021e6103cc366004612803565b611b94565b3480156103dd57600080fd5b506102c3611bdf565b6101af6103f436600461257b565b611bee565b34801561040557600080fd5b506101af610414366004612646565b611d56565b34801561042557600080fd5b5061021e610434366004612634565b611efa565b600080856001600160a01b038116331480159061045f57506001600160a01b0381163014155b156104ea57336000908152602081905260409020546001600160a01b0316806104a35760405162461bcd60e51b815260040161049a90612fbc565b60405180910390fd5b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff166104e85760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b03861615158061050957506001600160a01b03871630145b6105255760405162461bcd60e51b815260040161049a90612e41565b60006001600160a01b0389161561053c578861055e565b7f00000000000000000000000000000000000000000000000000000000000000005b90506105686122cf565b506001600160a01b038082166000908152600760209081526040918290208251808401909352546001600160801b038082168452600160801b9091041690820152908916301415610662576001600160a01b038a16156106595780516040516370a0823160e01b8152610654916001600160801b0316906001600160a01b038516906370a08231906105fe903090600401612920565b60206040518083038186803b15801561061657600080fd5b505afa15801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e919061282e565b90611f17565b61065b565b475b9650600095505b80516001600160801b03161515806106ea57506000826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e8919061282e565b115b6107065760405162461bcd60e51b815260040161049a90612d2e565b8561071c576107158188611f3a565b9550610729565b6107268187611f7f565b96505b6001600160a01b038816156107bd576001600160a01b038083166000908152600660209081526040808320938c16835292905220546107689087611fb5565b6001600160a01b038084166000908152600660209081526040808320938d16835292905220556107ae61079a87611fd8565b60208301516001600160801b031690612005565b6001600160801b031660208201525b6107da6107c988611fd8565b82516001600160801b031690612005565b6001600160801b0390811682526001600160a01b03808416600090815260076020908152604090912084518154928601518516600160801b029085166fffffffffffffffffffffffffffffffff1990931692909217909316179091558a166108b5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0886040518263ffffffff1660e01b81526004016000604051808303818588803b15801561089757600080fd5b505af11580156108ab573d6000803e3d6000fd5b50505050506108da565b6001600160a01b03891630146108da576108da6001600160a01b0383168a308a612034565b876001600160a01b0316896001600160a01b0316836001600160a01b03167fb2346165e782564f17f5b7e555c21f4fd96fbc93458572bf0113ea35a958fc558a8a604051610929929190613127565b60405180910390a45094989397509295505050505050565b6001546001600160a01b0316331461096b5760405162461bcd60e51b815260040161049a90612e78565b8115610a07576001600160a01b0383161515806109855750805b6109a15760405162461bcd60e51b815260040161049a90612cf7565b6001546040516001600160a01b038086169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0385166001600160a01b031991821617909155600280549091169055610a23565b600280546001600160a01b0319166001600160a01b0385161790555b505050565b846001600160a01b0381163314801590610a4b57506001600160a01b0381163014155b15610acd57336000908152602081905260409020546001600160a01b031680610a865760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16610acb5760405162461bcd60e51b815260040161049a90612ead565b505b600085858281610ad957fe5b9050602002016020810190610aee9190612380565b6001600160a01b03161415610b155760405162461bcd60e51b815260040161049a90612e0a565b6000805b85811015610c46576000878783818110610b2f57fe5b9050602002016020810190610b449190612380565b9050610b89868684818110610b5557fe5b6001600160a01b03808f16600090815260066020908152604080832093891683529281529190205493910201359050611fb5565b6001600160a01b03808c16600090815260066020908152604080832093861683529290522055610bd4868684818110610bbe57fe5b9050602002013584611fb590919063ffffffff16565b9250806001600160a01b0316896001600160a01b03168b6001600160a01b03167f6eabe333476233fd382224f233210cb808a7bc4c4de64f9d76628bf63c677b1a898987818110610c2157fe5b90506020020135604051610c35919061311e565b60405180910390a450600101610b19565b506001600160a01b038089166000908152600660209081526040808320938b1683529290522054610c779082611f17565b6001600160a01b0398891660009081526006602090815260408083209a909b168252989098529790962096909655505050505050565b60046020526000908152604090205460ff1681565b6001600160a01b03821660009081526007602090815260408083208151808301909252546001600160801b038082168352600160801b9091041691810191909152610d0d9083611f7f565b90505b92915050565b6002546001600160a01b0316338114610d415760405162461bcd60e51b815260040161049a90612ee4565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b039092166001600160a01b0319928316179055600280549091169055565b6007602052600090815260409020546001600160801b0380821691600160801b90041682565b6001546001600160a01b03163314610df45760405162461bcd60e51b815260040161049a90612e78565b6001600160a01b03821660008181526004602052604090819020805460ff1916841515179055517f31a1e0eac44b54ac6c2a2efa87e92c83405ffcf33fceef02a7bca695130e260090610e48908490612b16565b60405180910390a25050565b60056020526000908152604090205481565b6001546001600160a01b031681565b600360209081526000928352604080842090915290825290205460ff1681565b600080856001600160a01b0381163314801590610ebb57506001600160a01b0381163014155b15610f3d57336000908152602081905260409020546001600160a01b031680610ef65760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16610f3b5760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b038616610f635760405162461bcd60e51b815260040161049a90612e41565b60006001600160a01b03891615610f7a5788610f9c565b7f00000000000000000000000000000000000000000000000000000000000000005b9050610fa66122cf565b506001600160a01b0381166000908152600760209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015285610ffc57610ff58188611f3a565b9550611009565b6110068187611f7f565b96505b6001600160a01b038083166000908152600660209081526040808320938d16835292905220546110399087611f17565b6001600160a01b038084166000908152600660209081526040808320938e168352929052205561107c61106b88611fd8565b82516001600160801b031690612125565b6001600160801b031681526110a761109387611fd8565b60208301516001600160801b031690612125565b6001600160801b031660208201819052620186a011156110d95760405162461bcd60e51b815260040161049a90612cc0565b6001600160a01b03828116600090815260076020908152604090912083518154928501516fffffffffffffffffffffffffffffffff199093166001600160801b03918216178116600160801b91909316029190911790558a1661123657604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90611182908a9060040161311e565b600060405180830381600087803b15801561119c57600080fd5b505af11580156111b0573d6000803e3d6000fd5b505050506000886001600160a01b0316886040516111cd9061291d565b60006040518083038185875af1925050503d806000811461120a576040519150601f19603f3d011682016040523d82523d6000602084013e61120f565b606091505b50509050806112305760405162461bcd60e51b815260040161049a90613096565b5061124a565b61124a6001600160a01b0383168989612154565b876001600160a01b0316896001600160a01b0316836001600160a01b03167fad9ab9ee6953d4d177f4a03b3a3ac3178ffcb9816319f348060194aa76b144868a8a604051610929929190613127565b60608667ffffffffffffffff811180156112b257600080fd5b506040519080825280602002602001820160405280156112dc578160200160208202803683370190505b5090508660005b8181101561138a5760008888838181106112f957fe5b90506020020135905061271061131960058361224290919063ffffffff16565b8161132057fe5b0484838151811061132d57fe5b6020026020010181815250506113818c8a8a8581811061134957fe5b905060200201358d8d8681811061135c57fe5b90506020020160208101906113719190612380565b6001600160a01b03169190612154565b506001016112e3565b50604051631b77b6af60e11b81526001600160a01b038616906336ef6d5e906113c3908c908c908c908c9089908c908c90600401612a4c565b600060405180830381600087803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b5050505060005b818110156116aa576114086122cf565b600760008c8c8581811061141857fe5b905060200201602081019061142d9190612380565b6001600160a01b03168152602080820192909252604090810160009081208251808401909352546001600160801b038082168452600160801b909104169282019290925291508b8b8481811061147f57fe5b90506020020160208101906114949190612380565b905060006114b48685815181106114a757fe5b6020026020010151611fd8565b83519091506114cc906001600160801b031682612005565b6001600160801b0316826001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016115019190612920565b60206040518083038186803b15801561151957600080fd5b505afa15801561152d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611551919061282e565b1461156e5760405162461bcd60e51b815260040161049a90612d65565b8251611583906001600160801b031682612005565b83600001906001600160801b031690816001600160801b0316815250508260076000846001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b03160217905550905050886001600160a01b0316826001600160a01b03168f6001600160a01b03167f3be9b85936d5d30a1655ea116a17ee3d827b2cd428cc026ce5bf2ac46a2232048e8e8981811061166e57fe5b905060200201358a898151811061168157fe5b6020026020010151604051611697929190613127565b60405180910390a45050506001016113f8565b5050505050505050505050565b6000602081905290815260409020546001600160a01b031681565b6001600160a01b0385166116f85760405162461bcd60e51b815260040161049a90612f85565b81158015611704575080155b8015611711575060ff8316155b1561177b576001600160a01b038616331461173e5760405162461bcd60e51b815260040161049a90612c1b565b6001600160a01b03851660009081526004602052604090205460ff166117765760405162461bcd60e51b815260040161049a9061305f565b611926565b6001600160a01b0386166117a15760405162461bcd60e51b815260040161049a90613028565b60006117ab612279565b7f1962bc9f5484cb7a998701b81090e966ee1fce5771af884cceee7c081b14ade28661180c576040518060400160405280601a81526020017f5265766f6b652061636365737320746f2042656e746f426f783f000000000000815250611826565b6040518060600160405280603881526020016131d1603891395b6001600160a01b038a1660009081526005602090815260409182902080546001810190915591516118609493928d928d928d929101612b9d565b60405160208183030381529060405280519060200120604051602001611887929190612902565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516118c49493929190612b63565b6020604051602081039080840390855afa1580156118e6573d6000803e3d6000fd5b505050602060405103519050876001600160a01b0316816001600160a01b0316146119235760405162461bcd60e51b815260040161049a90612f19565b50505b6001600160a01b038581166000818152600360209081526040808320948b168084529490915290819020805460ff1916881515179055517f5f6ebb64ba012a851c6f014e6cad458ddf213d1512049b31cd06365c2b0592579061198a908890612b16565b60405180910390a3505050505050565b6060808367ffffffffffffffff811180156119b457600080fd5b506040519080825280602002602001820160405280156119de578160200160208202803683370190505b5091508367ffffffffffffffff811180156119f857600080fd5b50604051908082528060200260200182016040528015611a2c57816020015b6060815260200190600190039081611a175790505b50905060005b84811015611b17576000606030888885818110611a4b57fe5b9050602002810190611a5d9190613135565b604051611a6b9291906128d6565b600060405180830381855af49150503d8060008114611aa6576040519150601f19603f3d011682016040523d82523d6000602084013e611aab565b606091505b50915091508180611aba575085155b611ad65760405162461bcd60e51b815260040161049a90612c89565b81858481518110611ae357fe5b60200260200101901515908115158152505080848481518110611b0257fe5b60209081029190910101525050600101611a32565b50935093915050565b60405163d505accf60e01b81526001600160a01b0389169063d505accf90611b58908a908a908a908a908a908a908a90600401612958565b600060405180830381600087803b158015611b7257600080fd5b505af1158015611b86573d6000803e3d6000fd5b505050505050505050505050565b6001600160a01b03821660009081526007602090815260408083208151808301909252546001600160801b038082168352600160801b9091041691810191909152610d0d9083611f3a565b6002546001600160a01b031681565b6001600160a01b038316611c145760405162461bcd60e51b815260040161049a90612f50565b60008360601b905060006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f06001600160a01b038181166000818152602081905260409081902080546001600160a01b031916938b16939093179092559051631377d1f560e21b81529193509150634ddf47d4903490611cd09088908890600401612b81565b6000604051808303818588803b158015611ce957600080fd5b505af1158015611cfd573d6000803e3d6000fd5b5050505050806001600160a01b0316856001600160a01b03167fd62166f3c2149208e51788b1401cc356bf5da1fc6c7886a32e18570f57d88b3b8686604051611d47929190612b81565b60405180910390a35050505050565b826001600160a01b0381163314801590611d7957506001600160a01b0381163014155b15611dfb57336000908152602081905260409020546001600160a01b031680611db45760405162461bcd60e51b815260040161049a90612fbc565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205460ff16611df95760405162461bcd60e51b815260040161049a90612ead565b505b6001600160a01b038316611e215760405162461bcd60e51b815260040161049a90612e41565b6001600160a01b03808616600090815260066020908152604080832093881683529290522054611e519083611f17565b6001600160a01b03868116600090815260066020908152604080832089851684529091528082209390935590851681522054611e8d9083611fb5565b6001600160a01b0380871660008181526006602090815260408083208986168085529252918290209490945551918716917f6eabe333476233fd382224f233210cb808a7bc4c4de64f9d76628bf63c677b1a90611eeb90879061311e565b60405180910390a45050505050565b600660209081526000928352604080842090915290825290205481565b80820382811115610d105760405162461bcd60e51b815260040161049a90612be4565b81516000906001600160801b031615611f7957825160208401516001600160801b0391821691611f6c91859116612242565b81611f7357fe5b04610d0d565b50919050565b600082602001516001600160801b0316600014611f7957602083015183516001600160801b0391821691611f6c91859116612242565b81810181811015610d105760405162461bcd60e51b815260040161049a90612dd3565b60006001600160801b038211156120015760405162461bcd60e51b815260040161049a90612d9c565b5090565b8181016001600160801b038083169082161015610d105760405162461bcd60e51b815260040161049a90612dd3565b60006060856001600160a01b03166323b872dd86868660405160240161205c93929190612934565b6040516020818303038152906040529060e01b6020820180516001600160e01b03838183161783525050505060405161209591906128e6565b6000604051808303816000865af19150503d80600081146120d2576040519150601f19603f3d011682016040523d82523d6000602084013e6120d7565b606091505b50915091508180156121015750805115806121015750808060200190518101906121019190612618565b61211d5760405162461bcd60e51b815260040161049a90612ff3565b505050505050565b8082036001600160801b038084169082161115610d105760405162461bcd60e51b815260040161049a90612be4565b60006060846001600160a01b031663a9059cbb858560405160240161217a929190612999565b6040516020818303038152906040529060e01b6020820180516001600160e01b0383818316178352505050506040516121b391906128e6565b6000604051808303816000865af19150503d80600081146121f0576040519150601f19603f3d011682016040523d82523d6000602084013e6121f5565b606091505b509150915081801561221f57508051158061221f57508080602001905181019061221f9190612618565b61223b5760405162461bcd60e51b815260040161049a90612c52565b5050505050565b600081158061225d5750508082028282828161225a57fe5b04145b610d105760405162461bcd60e51b815260040161049a906130cd565b60405160009046906122b3907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8669083903090602001612b21565b6040516020818303038152906040528051906020012091505090565b604080518082019091526000808252602082015290565b60008083601f8401126122f7578182fd5b50813567ffffffffffffffff81111561230e578182fd5b602083019150836020808302850101111561232857600080fd5b9250929050565b60008083601f840112612340578182fd5b50813567ffffffffffffffff811115612357578182fd5b60208301915083602082850101111561232857600080fd5b803560ff81168114610d1057600080fd5b600060208284031215612391578081fd5b813561239c816131aa565b9392505050565b600080604083850312156123b5578081fd5b82356123c0816131aa565b915060208301356123d0816131aa565b809150509250929050565b60008060008060008060c087890312156123f3578182fd5b86356123fe816131aa565b9550602087013561240e816131aa565b9450604087013561241e816131c2565b935061242d886060890161236f565b92506080870135915060a087013590509295509295509295565b60008060008060008060008060a0898b031215612462578182fd5b883561246d816131aa565b9750602089013567ffffffffffffffff80821115612489578384fd5b6124958c838d016122e6565b909950975060408b01359150808211156124ad578384fd5b6124b98c838d016122e6565b909750955060608b013591506124ce826131aa565b90935060808a013590808211156124e3578384fd5b506124f08b828c0161232f565b999c989b5096995094979396929594505050565b60008060408385031215612516578182fd5b8235612521816131aa565b915060208301356123d0816131c2565b600080600060608486031215612545578283fd5b8335612550816131aa565b92506020840135612560816131c2565b91506040840135612570816131c2565b809150509250925092565b60008060006040848603121561258f578283fd5b833561259a816131aa565b9250602084013567ffffffffffffffff8111156125b5578283fd5b6125c18682870161232f565b9497909650939450505050565b6000806000604084860312156125e2578283fd5b833567ffffffffffffffff8111156125f8578384fd5b612604868287016122e6565b9094509250506020840135612570816131c2565b600060208284031215612629578081fd5b815161239c816131c2565b600080604083850312156123b5578182fd5b6000806000806080858703121561265b578182fd5b8435612666816131aa565b93506020850135612676816131aa565b92506040850135612686816131aa565b9396929550929360600135925050565b600080600080600060a086880312156126ad578283fd5b85356126b8816131aa565b945060208601356126c8816131aa565b935060408601356126d8816131aa565b94979396509394606081013594506080013592915050565b600080600080600080600080610100898b03121561270c578182fd5b8835612717816131aa565b97506020890135612727816131aa565b96506040890135612737816131aa565b955060608901359450608089013593506127548a60a08b0161236f565b925060c0890135915060e089013590509295985092959890939650565b60008060008060008060808789031215612789578384fd5b8635612794816131aa565b955060208701356127a4816131aa565b9450604087013567ffffffffffffffff808211156127c0578586fd5b6127cc8a838b016122e6565b909650945060608901359150808211156127e4578384fd5b506127f189828a016122e6565b979a9699509497509295939492505050565b60008060408385031215612815578182fd5b8235612820816131aa565b946020939093013593505050565b60006020828403121561283f578081fd5b5051919050565b6000815180845260208085019450808401835b8381101561287557815187529582019590820190600101612859565b509495945050505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526128c281602086016020860161317a565b601f01601f19169290920160200192915050565b6000828483379101908152919050565b600082516128f881846020870161317a565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b828110156129ed5781511515845292840192908401906001016129cf565b50505083810382850152808551612a04818461311e565b91508192508381028201848801865b83811015612a3d578583038552612a2b8383516128aa565b94870194925090860190600101612a13565b50909998505050505050505050565b6080808252810187905260008860a08301825b8a811015612a8f5760208335612a74816131aa565b6001600160a01b031683529283019290910190600101612a5f565b5083810360208501528781527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881115612ac7578283fd5b602088029150818960208301370160208181018381528483039091016040850152612af28188612846565b9150508281036060840152612b08818587612880565b9a9950505050505050505050565b901515815260200190565b928352608060208401819052600b908401526a2132b73a37a137bc102b1960a91b60a084015260408301919091526001600160a01b0316606082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252612b95602083018486612880565b949350505050565b600087825260c06020830152612bb660c08301886128aa565b6001600160a01b039687166040840152949095166060820152911515608083015260a0909101529392505050565b60208082526015908201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604082015260600190565b6020808252601b908201527f4d6173746572434d67723a2075736572206e6f742073656e6465720000000000604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b6020808252601a908201527f426f72696e67426174636861626c653a205478206661696c6564000000000000604082015260600190565b60208082526016908201527f42656e746f426f783a2063616e6e6f7420656d70747900000000000000000000604082015260600190565b60208082526015908201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604082015260600190565b60208082526013908201527f42656e746f426f783a204e6f20746f6b656e7300000000000000000000000000604082015260600190565b6020808252601a908201527f42656e746f426f78506c75733a2057726f6e6720616d6f756e74000000000000604082015260600190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b60208082526017908201527f42656e746f426f783a20746f5b305d206e6f7420736574000000000000000000604082015260600190565b60208082526014908201527f42656e746f426f783a20746f206e6f7420736574000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f42656e746f426f783a205472616e73666572206e6f7420617070726f76656400604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b6020808252601d908201527f4d6173746572434d67723a20496e76616c6964205369676e6174757265000000604082015260600190565b6020808252818101527f426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374604082015260600190565b6020808252601b908201527f4d6173746572434d67723a206d617374657243206e6f74207365740000000000604082015260600190565b6020808252601b908201527f42656e746f426f783a206e6f206d6173746572436f6e74726163740000000000604082015260600190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b6020808252601c908201527f4d6173746572434d67723a20557365722063616e6e6f74206265203000000000604082015260600190565b6020808252601b908201527f4d6173746572434d67723a206e6f742077686974656c69737465640000000000604082015260600190565b6020808252601d908201527f42656e746f426f783a20455448207472616e73666572206661696c6564000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b6001600160801b0392831681529116602082015260400190565b90815260200190565b918252602082015260400190565b6000808335601e1984360301811261314b578283fd5b83018035915067ffffffffffffffff821115613165578283fd5b60200191503681900382131561232857600080fd5b60005b8381101561319557818101518382015260200161317d565b838111156131a4576000848401525b50505050565b6001600160a01b03811681146131bf57600080fd5b50565b80151581146131bf57600080fdfe476976652046554c4c2061636365737320746f2066756e647320696e2028616e6420617070726f76656420746f292042656e746f426f783fa264697066735822122010d9b156eb89cf34f67acfbfa9c0a911f54408d4a67bf6d191aa3933792914cf64736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 134,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "masterContractOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 190,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 192,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6490,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "masterContractApproved",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 6494,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "whitelistedMasterContracts",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6498,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "nonces",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3601,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_contract(IERC20)687,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 3605,
        "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
        "label": "totals",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_contract(IERC20)687,t_struct(Rebase)1065_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)687": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)687,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)687",
        "label": "mapping(contract IERC20 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_contract(IERC20)687,t_struct(Rebase)1065_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)687",
        "label": "mapping(contract IERC20 => struct Rebase)",
        "numberOfBytes": "32",
        "value": "t_struct(Rebase)1065_storage"
      },
      "t_struct(Rebase)1065_storage": {
        "encoding": "inplace",
        "label": "struct Rebase",
        "members": [
          {
            "astId": 1062,
            "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 1064,
            "contract": "contracts/BentoBoxPlus.sol:BentoBoxPlus",
            "label": "share",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}